[
    {
        "steps": [
            {
                "step": 0,
                "x": "1 1 4 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 1 = 2 (quedan: 2 4 6)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n",
                    "4 / 2 = 2 (quedan: 1 2 2)\n",
                    "1 + 4 = 5 (quedan: 5 2 6)\n",
                    "1 * 4 = 4 (quedan: 4 2 6)\n",
                    "6 - 1 = 5 (quedan: 5 4 6)\n",
                    "6 - 6 = 0 (quedan: 1 4 0)\n"
                ],
                "values": [
                    2.0,
                    60.0,
                    3.0,
                    0.003,
                    3.0,
                    3.0,
                    2.0,
                    0.001
                ],
                "select_new_ys": [
                    "1 * 1 = 1 (quedan: 1 4 6)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n",
                    "1 + 4 = 5 (quedan: 5 2 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 1 4 6",
                "ys": [
                    "1 * 1 = 1 (quedan: 1 4 6)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n",
                    "1 + 4 = 5 (quedan: 5 2 6)\n"
                ],
                "new_ys": [
                    "1 * 1 = 1 (quedan: 1 4 6)\n1 + 4 = 5 (quedan: 5 6)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n4 - 1 = 3 (quedan: 3 6)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n1 * 4 = 4 (quedan: 4 6)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n4 / 1 = 4 (quedan: 4 6)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 1 = 5 (quedan: 5 6)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 / 4 = 1.5 (no es posible continuar con n\u00fameros enteros)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n1 + 2 = 3 (quedan: 3 6)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n2 * 6 = 12 (quedan: 1 12)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n6 / 2 = 3 (quedan: 1 3)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n2 + 6 = 8 (quedan: 1 8)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n1 * 2 = 2 (quedan: 2 6)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n6 - 2 = 4 (quedan: 1 4)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n6 - 1 = 5 (quedan: 2 5)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n6 / 1 = 6 (quedan: 2 6)\n",
                    "1 + 4 = 5 (quedan: 5 2 6)\n5 + 2 = 7 (quedan: 7 6)\n",
                    "1 + 4 = 5 (quedan: 5 2 6)\n5 * 2 = 10 (quedan: 10 6)\n",
                    "1 + 4 = 5 (quedan: 5 2 6)\n5 - 2 = 3 (quedan: 3 6)\n",
                    "1 + 4 = 5 (quedan: 5 2 6)\n2 + 6 = 8 (quedan: 5 8)\n",
                    "1 + 4 = 5 (quedan: 5 2 6)\n2 * 6 = 12 (quedan: 5 12)\n",
                    "1 + 4 = 5 (quedan: 5 2 6)\n2 - 6 = -4 (no es posible continuar con n\u00fameros negativos)\n"
                ],
                "values": [
                    0.0,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    3.0,
                    0.003,
                    0.001,
                    3.0,
                    0.0,
                    3.0,
                    3.0,
                    0.001,
                    1.001,
                    3.0,
                    0.002,
                    0.001,
                    0.001,
                    0.001,
                    0.0,
                    0.003
                ],
                "select_new_ys": [
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n2 * 6 = 12 (quedan: 1 12)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n2 + 6 = 8 (quedan: 1 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 1 4 6",
                "ys": [
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n2 * 6 = 12 (quedan: 1 12)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n2 + 6 = 8 (quedan: 1 8)\n"
                ],
                "new_ys": [
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n1 + 2 = 3 (quedan: 3 6)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 * 6 = 12 (quedan: 1 12)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n6 / 2 = 3 (quedan: 1 3)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 + 6 = 8 (quedan: 1 8)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n1 * 2 = 2 (quedan: 2 6)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n6 - 2 = 4 (quedan: 1 4)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n6 - 1 = 5 (quedan: 2 5)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n6 / 1 = 6 (quedan: 2 6)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n2 * 6 = 12 (quedan: 1 12)\nNo se pueden realizar m\u00e1s operaciones ya que solo hay dos n\u00fameros y no se cumplen las condiciones para ninguna de las operaciones permitidas.\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n2 + 6 = 8 (quedan: 1 8)\n1 + 8 = 9 (quedan: 8 9)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n2 + 6 = 8 (quedan: 1 8)\n8 / 1 = 8 (quedan: 8 8)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n2 + 6 = 8 (quedan: 1 8)\n1 * 8 = 8 (quedan: 8 8)\n",
                    "6 - 4 = 2 (quedan: 1 2 6)\n2 + 6 = 8 (quedan: 1 8)\n8 - 1 = 7 (quedan: 7 8)\n"
                ],
                "values": [
                    0.001,
                    3.0,
                    0.0,
                    3.0,
                    3.0,
                    0.001,
                    1.001,
                    3.0,
                    0.003,
                    2.0,
                    2.001,
                    2.001,
                    0.001
                ],
                "select_new_ys": [
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 * 6 = 12 (quedan: 1 12)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 + 6 = 8 (quedan: 1 8)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n1 * 2 = 2 (quedan: 2 6)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 1 4 6",
                "ys": [
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 * 6 = 12 (quedan: 1 12)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 + 6 = 8 (quedan: 1 8)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n1 * 2 = 2 (quedan: 2 6)\n"
                ],
                "new_ys": [
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 * 6 = 12 (quedan: 1 12)\n1 + 12 = 13 (quedan: 13)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 * 6 = 12 (quedan: 1 12)\n12 / 2 = 6 (quedan: 6)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 * 6 = 12 (quedan: 1 12)\n12 - 1 = 11 (quedan: 11)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 * 6 = 12 (quedan: 1 12)\n1 * 12 = 12 (quedan: 12)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 * 6 = 12 (quedan: 1 12)\n12 - 12 = 0 (no hay m\u00e1s pasos posibles)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 + 6 = 8 (quedan: 1 8)\n1 + 8 = 9 (queda: 9 8)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 + 6 = 8 (quedan: 1 8)\n8 / 2 = 4 (queda: 1 4)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 + 6 = 8 (quedan: 1 8)\n8 - 1 = 7 (queda: 7 8)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 + 6 = 8 (quedan: 1 8)\n1 * 8 = 8 (queda: 8 8)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 + 6 = 8 (quedan: 1 8)\n8 - 8 = 0 (queda: 1)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n1 * 2 = 2 (quedan: 2 6)\n2 + 6 = 8 (quedan: 8)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n1 * 2 = 2 (quedan: 2 6)\n6 / 2 = 3 (quedan: 3)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n1 * 2 = 2 (quedan: 2 6)\n2 * 6 = 12 (quedan: 12)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n1 * 2 = 2 (quedan: 2 6)\n6 - 2 = 4 (quedan: 4)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 * 6 = 12 (quedan: 1 12)\n1 + 12 = 13 (quedan: 13)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 * 6 = 12 (quedan: 1 12)\n12 / 2 = 6 (quedan: 6)\n",
                    "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 * 6 = 12 (quedan: 1 12)\n12 - 1 = 11 (quedan: 11)\n"
                ]
            }
        ],
        "idx": 0,
        "ys": [
            "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 * 6 = 12 (quedan: 1 12)\n1 + 12 = 13 (quedan: 13)\n",
            "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 * 6 = 12 (quedan: 1 12)\n12 / 2 = 6 (quedan: 6)\n",
            "1 * 1 = 1 (quedan: 1 4 6)\n6 - 4 = 2 (quedan: 1 2 6)\n2 * 6 = 12 (quedan: 1 12)\n12 - 1 = 11 (quedan: 11)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 3675,
            "prompt_tokens": 17286,
            "cost": 0.0041922
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 1 11 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 1 = 2 (quedan: 2 11 11)\n",
                    "1 * 1 = 1 (quedan: 1 11 11)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n",
                    "11 * 1 = 11 (quedan: 1 11 11)\n",
                    "11 - 1 = 10 (quedan: 1 10 11)\n",
                    "11 - 11 = 0 (quedan: 1 1 11)\n",
                    "11 / 1 = 11 (quedan: 1 11 11)\n",
                    "11 / 11 = 1 (quedan: 1 1 11)\n"
                ],
                "values": [
                    60.0,
                    3.0,
                    41.0,
                    3.0,
                    2.0,
                    1.002,
                    3.0,
                    1.002
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (quedan: 2 11 11)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n",
                    "1 * 1 = 1 (quedan: 1 11 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 1 11 11",
                "ys": [
                    "1 + 1 = 2 (quedan: 2 11 11)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n",
                    "1 * 1 = 1 (quedan: 1 11 11)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (quedan: 2 11 11)\n2 + 11 = 13 (quedan: 11 13)\n",
                    "1 + 1 = 2 (quedan: 2 11 11)\n11 / 2 = 5.5 (no se puede continuar con n\u00fameros decimales)\n",
                    "1 + 1 = 2 (quedan: 2 11 11)\n11 - 2 = 9 (quedan: 9 11)\n",
                    "1 + 1 = 2 (quedan: 2 11 11)\n11 - 11 = 0 (quedan: 2 0)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n1 + 11 = 12 (quedan: 12 12)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n11 / 1 = 11 (quedan: 11 12)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 + 1 = 13 (quedan: 11 13)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n1 * 11 = 11 (quedan: 11 12)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n11 - 1 = 10 (quedan: 10 11)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 11 = 1 (quedan: 1 11)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 / 1 = 12 (quedan: 12 11)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n",
                    "1 * 1 = 1 (quedan: 1 11 11)\n1 + 11 = 12 (quedan: 11 12)\n",
                    "1 * 1 = 1 (quedan: 1 11 11)\n11 / 1 = 11 (quedan: 11 11)\n",
                    "1 * 1 = 1 (quedan: 1 11 11)\n11 - 1 = 10 (quedan: 10 11)\n",
                    "1 * 1 = 1 (quedan: 1 11 11)\n1 * 11 = 11 (quedan: 11 11)\n",
                    "1 * 1 = 1 (quedan: 1 11 11)\n11 - 11 = 0 (quedan: 1)\n"
                ],
                "values": [
                    0.0,
                    0.003,
                    0.0,
                    0.0,
                    60.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    2.001,
                    0.0,
                    2.001,
                    0.0,
                    2.001,
                    0.0,
                    2.001,
                    0.0
                ],
                "select_new_ys": [
                    "11 + 1 = 12 (quedan: 1 11 12)\n1 + 11 = 12 (quedan: 12 12)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 11 = 1 (quedan: 1 11)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 1 11 11",
                "ys": [
                    "11 + 1 = 12 (quedan: 1 11 12)\n1 + 11 = 12 (quedan: 12 12)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 11 = 1 (quedan: 1 11)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n"
                ],
                "new_ys": [
                    "11 + 1 = 12 (quedan: 1 11 12)\n1 + 11 = 12 (quedan: 12 12)\n12 / 2 = 6 (quedan: 6 12)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n1 + 11 = 12 (quedan: 12 12)\n12 - 2 = 10 (quedan: 10 12)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n1 + 11 = 12 (quedan: 12 12)\n12 + 12 = 24 (quedan: 12 24)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n1 + 11 = 12 (quedan: 12 12)\n12 * 12 = 144 (quedan: 12 144)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 11 = 1 (quedan: 1 11)\n1 + 11 = 12 (quedan: 12)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 11 = 1 (quedan: 1 11)\n11 / 2 = 5.5 (no es un n\u00famero entero) \n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 11 = 1 (quedan: 1 11)\n11 - 1 = 10 (quedan: 10)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 11 = 1 (quedan: 1 11)\n1 * 11 = 11 (quedan: 11)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 11 = 1 (quedan: 1 11)\n11 - 11 = 0 (quedan: 0)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n11 / 11 = 1 (quedan: 1 11)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n11 * 11 = 121 (quedan: 11 121)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n11 - 11 = 0 (quedan: 0 11)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n11 + 11 = 22 (quedan: 11 22)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.002,
                    0,
                    0.003,
                    0.0,
                    0,
                    0.0,
                    2.001,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n11 / 11 = 1 (quedan: 1 11)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 11 = 1 (quedan: 1 11)\n11 / 2 = 5.5 (no es un n\u00famero entero) \n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n1 + 11 = 12 (quedan: 12 12)\n12 * 12 = 144 (quedan: 12 144)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 1 11 11",
                "ys": [
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n11 / 11 = 1 (quedan: 1 11)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 11 = 1 (quedan: 1 11)\n11 / 2 = 5.5 (no es un n\u00famero entero) \n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n1 + 11 = 12 (quedan: 12 12)\n12 * 12 = 144 (quedan: 12 144)\n"
                ],
                "new_ys": [
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n11 / 11 = 1 (quedan: 1 11)\n1 + 11 = 12 (quedan: 12)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n11 / 11 = 1 (quedan: 1 11)\n11 - 1 = 10 (quedan: 10)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n11 / 11 = 1 (quedan: 1 11)\n11 / 1 = 11 (quedan: 11)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n11 / 11 = 1 (quedan: 1 11)\n1 * 11 = 11 (quedan: 11)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 11 = 1 (quedan: 1 11)\n11 / 2 = 5.5 (no es un n\u00famero entero) \nNo se puede continuar ya que la entrada no es un n\u00famero entero.\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n1 + 11 = 12 (quedan: 12 12)\n12 * 12 = 144 (quedan: 12 144)\n12 * 2 = 24 (quedan: 24 144)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n1 + 11 = 12 (quedan: 12 12)\n12 * 12 = 144 (quedan: 12 144)\n12 * 12 = 144 (quedan: 144)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n1 + 11 = 12 (quedan: 12 12)\n12 * 12 = 144 (quedan: 12 144)\n12 + 144 = 156 (quedan: 156)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n1 + 11 = 12 (quedan: 12 12)\n12 * 12 = 144 (quedan: 12 144)\n144 / 12 = 12 (quedan: 12)\n"
                ],
                "values": [
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n11 / 11 = 1 (quedan: 1 11)\n1 + 11 = 12 (quedan: 12)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n11 / 11 = 1 (quedan: 1 11)\n11 - 1 = 10 (quedan: 10)\n",
                    "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n11 / 11 = 1 (quedan: 1 11)\n11 / 1 = 11 (quedan: 11)\n"
                ]
            }
        ],
        "idx": 1,
        "ys": [
            "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n11 / 11 = 1 (quedan: 1 11)\n1 + 11 = 12 (quedan: 12)\n",
            "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n11 / 11 = 1 (quedan: 1 11)\n11 - 1 = 10 (quedan: 10)\n",
            "11 + 1 = 12 (quedan: 1 11 12)\n12 - 1 = 11 (quedan: 11 11)\n11 / 11 = 1 (quedan: 1 11)\n11 / 1 = 11 (quedan: 11)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 6524,
            "prompt_tokens": 30913,
            "cost": 0.0074874
        }
    }
]