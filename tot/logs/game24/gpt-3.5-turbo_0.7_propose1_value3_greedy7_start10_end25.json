[
    {
        "steps": [
            {
                "step": 0,
                "x": "1 1 2 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 1 = 2 (quedan: 2 2 8)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n",
                    "1 * 2 = 2 (quedan: 2 2 8)\n",
                    "8 - 1 = 7 (quedan: 1 2 7)\n",
                    "8 - 2 = 6 (quedan: 1 1 6)\n",
                    "2 * 8 = 16 (quedan: 1 2 16)\n",
                    "8 / 2 = 4 (quedan: 1 1 4)\n"
                ],
                "values": [
                    22.0,
                    60.0,
                    60.0,
                    22.0,
                    3.0,
                    3.0,
                    2.0,
                    3.0
                ],
                "select_new_ys": [
                    "1 * 1 = 1 (quedan: 1 2 8)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n",
                    "1 + 1 = 2 (quedan: 2 2 8)\n",
                    "1 * 2 = 2 (quedan: 2 2 8)\n",
                    "8 - 1 = 7 (quedan: 1 2 7)\n",
                    "8 - 2 = 6 (quedan: 1 1 6)\n",
                    "8 / 2 = 4 (quedan: 1 1 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 1 2 8",
                "ys": [
                    "1 * 1 = 1 (quedan: 1 2 8)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n",
                    "1 + 1 = 2 (quedan: 2 2 8)\n",
                    "1 * 2 = 2 (quedan: 2 2 8)\n",
                    "8 - 1 = 7 (quedan: 1 2 7)\n",
                    "8 - 2 = 6 (quedan: 1 1 6)\n",
                    "8 / 2 = 4 (quedan: 1 1 4)\n"
                ],
                "new_ys": [
                    "1 * 1 = 1 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n2 * 8 = 16 (quedan: 1 16)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n8 - 2 = 6 (quedan: 1 6)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n8 - 1 = 7 (quedan: 2 7)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n2 * 1 = 2 (quedan: 2 8)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n8 / 1 = 8 (quedan: 2 8)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\nEntrada: 5 7 9 10\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\nPosibles pr\u00f3ximos pasos:\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n5 + 7 = 12 (quedan: 9 10 12)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n7 / 5 = 1 (quedan: 1 9 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 + 5 = 14 (quedan: 7 10 14)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n10 + 5 = 15 (quedan: 7 9 15)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n5 * 7 = 35 (quedan: 9 10 35)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n7 - 5 = 2 (quedan: 2 9 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n10 - 7 = 3 (quedan: 5 7 3)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n1 + 3 = 4 (quedan: 4 8)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n8 - 1 = 7 (quedan: 3 7)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n3 * 7 = 21 (quedan: 1 21)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n1 + 8 = 9 (quedan: 3 9)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n8 / 3 = 2.66667 (quedan: 1 2.66667)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n3 - 1 = 2 (quedan: 2 8)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n8 / 1 = 8 (quedan: 3 8)\n",
                    "1 + 1 = 2 (quedan: 2 2 8)\n2 + 2 = 4 (quedan: 4 8)\n",
                    "1 + 1 = 2 (quedan: 2 2 8)\n2 * 2 = 4 (quedan: 4 8)\n",
                    "1 + 1 = 2 (quedan: 2 2 8)\n2 + 8 = 10 (quedan: 2 10)\n",
                    "1 + 1 = 2 (quedan: 2 2 8)\n2 * 8 = 16 (quedan: 2 16)\n",
                    "1 + 1 = 2 (quedan: 2 2 8)\n8 - 2 = 6 (quedan: 6 8)\n",
                    "1 + 1 = 2 (quedan: 2 2 8)\n8 / 2 = 4 (quedan: 2 4)\n",
                    "1 * 2 = 2 (quedan: 2 2 8)\n2 + 2 = 4 (quedan: 4 8)\n",
                    "1 * 2 = 2 (quedan: 2 2 8)\n2 * 2 = 4 (quedan: 4 8)\n",
                    "1 * 2 = 2 (quedan: 2 2 8)\n2 / 2 = 1 (quedan: 1 8)\n",
                    "1 * 2 = 2 (quedan: 2 2 8)\n2 + 8 = 10 (quedan: 2 10)\n",
                    "1 * 2 = 2 (quedan: 2 2 8)\n2 * 8 = 16 (quedan: 2 16)\n",
                    "1 * 2 = 2 (quedan: 2 2 8)\n2 - 2 = 0 (quedan: 0 8)\n",
                    "1 * 2 = 2 (quedan: 2 2 8)\n8 - 2 = 6 (quedan: 2 6)\n",
                    "8 - 1 = 7 (quedan: 1 2 7)\n1 + 2 = 3 (quedan: 3 7)\n",
                    "8 - 1 = 7 (quedan: 1 2 7)\n2 * 7 = 14 (quedan: 1 14)\n",
                    "8 - 1 = 7 (quedan: 1 2 7)\n7 - 2 = 5 (quedan: 1 5)\n",
                    "8 - 1 = 7 (quedan: 1 2 7)\n2 + 7 = 9 (quedan: 1 9)\n",
                    "8 - 1 = 7 (quedan: 1 2 7)\n7 / 2 = 3.5 (no se puede continuar con n\u00fameros decimales)\n",
                    "8 - 1 = 7 (quedan: 1 2 7)\n1 * 2 = 2 (quedan: 2 7)\n",
                    "8 - 1 = 7 (quedan: 1 2 7)\n7 - 1 = 6 (quedan: 2 6)\n",
                    "8 - 1 = 7 (quedan: 1 2 7)\n2 + 1 = 3 (quedan: 3 7)\n",
                    "8 - 2 = 6 (quedan: 1 1 6)\n1 + 1 = 2 (quedan: 2 6)\n",
                    "8 - 2 = 6 (quedan: 1 1 6)\n1 * 1 = 1 (quedan: 1 6)\n",
                    "8 - 2 = 6 (quedan: 1 1 6)\n6 + 1 = 7 (quedan: 1 7)\n",
                    "8 - 2 = 6 (quedan: 1 1 6)\n6 - 1 = 5 (quedan: 5 1)\n",
                    "8 - 2 = 6 (quedan: 1 1 6)\n6 / 1 = 6 (quedan: 6 1)\n",
                    "8 - 2 = 6 (quedan: 1 1 6)\n1 - 1 = 0 (quedan: 6 0)\n",
                    "8 / 2 = 4 (quedan: 1 1 4)\n1 + 1 = 2 (quedan: 2 4)\n",
                    "8 / 2 = 4 (quedan: 1 1 4)\n1 * 1 = 1 (quedan: 1 4)\n",
                    "8 / 2 = 4 (quedan: 1 1 4)\n4 + 1 = 5 (quedan: 1 5)\n",
                    "8 / 2 = 4 (quedan: 1 1 4)\n4 - 1 = 3 (quedan: 1 3)\n",
                    "8 / 2 = 4 (quedan: 1 1 4)\n4 / 1 = 4 (quedan: 4 4)\n",
                    "8 / 2 = 4 (quedan: 1 1 4)\n1 + 4 = 5 (quedan: 1 5)\n",
                    "8 / 2 = 4 (quedan: 1 1 4)\n1 * 4 = 4 (quedan: 4 4)\n",
                    "8 / 2 = 4 (quedan: 1 1 4)\n4 - 4 = 0 (quedan: 1)\n"
                ],
                "values": [
                    40.0,
                    1.002,
                    3.0,
                    3.0,
                    1.002,
                    2.0,
                    3.0,
                    3.0,
                    0.003,
                    0.003,
                    3.0,
                    3.0,
                    2.0,
                    2.0,
                    1.001,
                    3.0,
                    22.0,
                    3.0,
                    0.0,
                    40.0,
                    0.001,
                    3.0,
                    1.002,
                    0.0,
                    3.0,
                    40.0,
                    0.0,
                    0.0,
                    3.0,
                    2.001,
                    1.001,
                    1.002,
                    0.0,
                    0.0,
                    2.001,
                    3.0,
                    2.001,
                    0.0,
                    1.002,
                    0.001,
                    3.0,
                    2.001,
                    3.0,
                    0.003,
                    2.0,
                    1.002,
                    0.001,
                    1.002,
                    1.002,
                    1.002,
                    0.001,
                    0.0,
                    0.0,
                    1.002,
                    3.0,
                    2.001,
                    0.0,
                    0.003,
                    2.001,
                    0.003,
                    0.0
                ],
                "select_new_ys": [
                    "1 * 1 = 1 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n8 / 1 = 8 (quedan: 3 8)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n2 * 1 = 2 (quedan: 2 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 1 2 8",
                "ys": [
                    "1 * 1 = 1 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n8 / 1 = 8 (quedan: 3 8)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n2 * 1 = 2 (quedan: 2 8)\n"
                ],
                "new_ys": [
                    "1 * 1 = 1 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n3 + 8 = 11 (queda: 11)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n8 / 3 = 2.666... (queda: 2.666...)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n3 * 8 = 24 (queda: 24)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n8 - 3 = 5 (queda: 5)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n1 + 24 = 25 (quedan: 25)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n24 / 2 = 12 (quedan: 1 12)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n1 * 24 = 24 (quedan: 24)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n24 - 1 = 23 (quedan: 23)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n24 - 24 = 0 (el n\u00famero 24 no se puede usar de nuevo)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n8 / 1 = 8 (quedan: 3 8)\n3 + 8 = 11 (quedan: 11)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n8 / 1 = 8 (quedan: 3 8)\n8 / 3 = 2.66 (quedan: 2.66)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 + 2 = 4 (quedan: 4 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 * 2 = 4 (quedan: 4 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 * 10 = 20 (quedan: 2 20)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 - 2 = 8 (quedan: 2 8)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 - 2 = 0 (quedan: 0 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n1 + 4 = 5 (quedan: 5)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n4 / 2 = 2 (quedan: 2)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n4 - 1 = 3 (quedan: 3)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n1 * 4 = 4 (quedan: 4)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n1 + 10 = 11 (quedan: 11)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n10 / 2 = 5 (quedan: 5)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n10 - 1 = 9 (quedan: 9)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n1 * 10 = 10 (quedan: 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n2 * 1 = 2 (quedan: 2 8)\n2 + 8 = 10 (quedan: 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n2 * 1 = 2 (quedan: 2 8)\n8 / 2 = 4 (quedan: 4)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n2 * 1 = 2 (quedan: 2 8)\n2 * 8 = 16 (quedan: 16)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n2 * 1 = 2 (quedan: 2 8)\n8 - 2 = 6 (quedan: 6)\n"
                ],
                "values": [
                    0.003,
                    0.003,
                    60.0,
                    0.003,
                    0.0,
                    3.0,
                    0.0,
                    0.0,
                    0.003,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    60.0,
                    3.0,
                    3.0,
                    3.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 * 1 = 1 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n3 * 8 = 24 (queda: 24)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n24 / 2 = 12 (quedan: 1 12)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 * 10 = 20 (quedan: 2 20)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 - 2 = 8 (quedan: 2 8)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n3 + 8 = 11 (queda: 11)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 1 2 8",
                "ys": [
                    "1 * 1 = 1 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n3 * 8 = 24 (queda: 24)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n24 / 2 = 12 (quedan: 1 12)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 * 10 = 20 (quedan: 2 20)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 - 2 = 8 (quedan: 2 8)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n3 + 8 = 11 (queda: 11)\n"
                ],
                "new_ys": [
                    "1 * 1 = 1 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n3 * 8 = 24 (queda: 24)\nNo hay pr\u00f3ximos pasos posibles ya que solo queda un n\u00famero en la entrada.\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n2 + 12 = 14 (quedan: 14)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n12 / 2 = 6 (quedan: 6)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n2 * 12 = 24 (quedan: 24)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n12 - 2 = 10 (quedan: 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\nNo hay m\u00e1s opciones, se lleg\u00f3 a un punto muerto.\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n24 / 2 = 12 (quedan: 1 12)\n1 + 12 = 13 (quedan: 13)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n24 / 2 = 12 (quedan: 1 12)\n12 / 2 = 6 (quedan: 6) \n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n24 / 2 = 12 (quedan: 1 12)\n12 - 1 = 11 (quedan: 11)\n",
                    "2 + 1 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n24 / 2 = 12 (quedan: 1 12)\n1 * 12 = 12 (quedan: 12)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 * 10 = 20 (quedan: 2 20)\n2 + 20 = 22 (quedan: 22)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 * 10 = 20 (quedan: 2 20)\n20 / 2 = 10 (quedan: 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 * 10 = 20 (quedan: 2 20)\n20 - 2 = 18 (quedan: 18)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 * 10 = 20 (quedan: 2 20)\n2 * 20 = 40 (quedan: 40)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 - 2 = 8 (quedan: 2 8)\n2 + 8 = 10 (queda: 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 - 2 = 8 (quedan: 2 8)\n8 / 2 = 4 (queda: 4)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 - 2 = 8 (quedan: 2 8)\n2 * 8 = 16 (queda: 16)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 - 2 = 8 (quedan: 2 8)\n8 - 2 = 6 (queda: 6)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n1 + 2 = 3 (quedan: 3 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n2 * 10 = 20 (quedan: 1 20)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n10 - 2 = 8 (quedan: 1 8)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n2 + 10 = 12 (quedan: 1 12)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n1 * 2 = 2 (quedan: 2 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n10 / 2 = 5 (quedan: 1 5)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n10 - 1 = 9 (quedan: 2 9)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n2 * 2 = 4 (quedan: 4 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n10 - 2 = 8 (quedan: 1 8)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n3 + 8 = 11 (queda: 11)\nNo hay posibles pr\u00f3ximos pasos, ya que solo queda un n\u00famero en la entrada.\n"
                ],
                "values": [
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2.001,
                    3.0,
                    3.0,
                    2.001,
                    0,
                    0.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n2 + 10 = 12 (quedan: 1 12)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n1 * 2 = 2 (quedan: 2 10)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n10 - 2 = 8 (quedan: 1 8)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n10 / 2 = 5 (quedan: 1 5)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n3 * 8 = 24 (queda: 24)\nNo hay pr\u00f3ximos pasos posibles ya que solo queda un n\u00famero en la entrada.\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n2 + 12 = 14 (quedan: 14)\n",
                    "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n12 / 2 = 6 (quedan: 6)\n"
                ]
            }
        ],
        "idx": 10,
        "ys": [
            "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n2 + 10 = 12 (quedan: 1 12)\n",
            "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n1 * 2 = 2 (quedan: 2 10)\n",
            "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n10 - 2 = 8 (quedan: 1 8)\n",
            "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 2 10)\n10 / 2 = 5 (quedan: 1 5)\n",
            "1 * 1 = 1 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n3 * 8 = 24 (queda: 24)\nNo hay pr\u00f3ximos pasos posibles ya que solo queda un n\u00famero en la entrada.\n",
            "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n2 + 12 = 14 (quedan: 14)\n",
            "1 * 1 = 1 (quedan: 1 2 8)\n9 - 7 = 2 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n12 / 2 = 6 (quedan: 6)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 9019,
            "prompt_tokens": 38197,
            "cost": 0.0094432
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 1 4 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 1 = 2 (quedan: 2 4 8)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n",
                    "4 - 1 = 3 (quedan: 1 3 8)\n",
                    "8 - 1 = 7 (quedan: 1 4 7)\n",
                    "1 + 4 = 5 (quedan: 5 4 8)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\n",
                    "4 / 1 = 4 (quedan: 4 4 8)\n"
                ],
                "values": [
                    3.0,
                    3.0,
                    60.0,
                    3.0,
                    3.0,
                    3.0,
                    3.0,
                    3.0
                ],
                "select_new_ys": [
                    "4 - 1 = 3 (quedan: 1 3 8)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n",
                    "8 - 1 = 7 (quedan: 1 4 7)\n",
                    "1 + 4 = 5 (quedan: 5 4 8)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 1 4 8",
                "ys": [
                    "4 - 1 = 3 (quedan: 1 3 8)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n",
                    "8 - 1 = 7 (quedan: 1 4 7)\n",
                    "1 + 4 = 5 (quedan: 5 4 8)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\n"
                ],
                "new_ys": [
                    "4 - 1 = 3 (quedan: 1 3 8)\n1 + 3 = 4 (quedan: 4 8)\n",
                    "4 - 1 = 3 (quedan: 1 3 8)\n3 + 8 = 11 (quedan: 1 11)\n",
                    "4 - 1 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n",
                    "4 - 1 = 3 (quedan: 1 3 8)\n8 - 3 = 5 (quedan: 1 5)\n",
                    "4 - 1 = 3 (quedan: 1 3 8)\n3 - 1 = 2 (quedan: 2 8)\n",
                    "4 - 1 = 3 (quedan: 1 3 8)\n8 / 3 = 2.67 (no se pueden utilizar n\u00fameros decimales)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n2 + 4 = 6 (quedan: 6 8)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n4 * 2 = 8 (quedan: 2 8)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n8 / 4 = 2 (quedan: 2 2 8)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n8 - 4 = 4 (quedan: 2 4 8)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n4 / 2 = 2 (quedan: 2 2 8)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n8 - 2 = 6 (quedan: 2 4 6)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n4 + 2 = 6 (quedan: 6 8)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n2 * 8 = 16 (quedan: 2 16)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n1 + 4 = 5 (quedan: 5 8)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n8 - 1 = 7 (quedan: 7 4)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n1 * 8 = 8 (quedan: 8 4)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 - 1 = 3 (quedan: 3 8)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n8 / 1 = 8 (quedan: 4 8)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 + 8 = 12 (quedan: 1 12)\n",
                    "8 - 1 = 7 (quedan: 1 4 7)\n1 + 4 = 5 (quedan: 5 7)\n",
                    "8 - 1 = 7 (quedan: 1 4 7)\n4 + 7 = 11 (quedan: 1 11)\n",
                    "8 - 1 = 7 (quedan: 1 4 7)\n1 * 4 = 4 (quedan: 4 7)\n",
                    "8 - 1 = 7 (quedan: 1 4 7)\n7 - 4 = 3 (quedan: 1 3)\n",
                    "8 - 1 = 7 (quedan: 1 4 7)\n7 / 4 = 1.75 (no se puede seguir con n\u00fameros enteros)\n",
                    "1 + 4 = 5 (quedan: 5 4 8)\n5 + 4 = 9 (quedan: 9 8)\n",
                    "1 + 4 = 5 (quedan: 5 4 8)\n5 * 4 = 20 (quedan: 20 8)\n",
                    "1 + 4 = 5 (quedan: 5 4 8)\n5 - 4 = 1 (quedan: 1 8)\n",
                    "1 + 4 = 5 (quedan: 5 4 8)\n4 + 8 = 12 (quedan: 5 12)\n",
                    "1 + 4 = 5 (quedan: 5 4 8)\n4 * 8 = 32 (quedan: 5 32)\n",
                    "1 + 4 = 5 (quedan: 5 4 8)\n4 - 8 = -4 (no se puede continuar con n\u00fameros negativos)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n1 + 4 = 5 (quedan: 5 8)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n4 - 1 = 3 (quedan: 3 8)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 - 4 = 4 (quedan: 1 4 4)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n1 * 4 = 4 (quedan: 4 4 8)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 - 1 = 7 (quedan: 4 7)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n4 / 1 = 4 (quedan: 4 8)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 - 1 = 7 (quedan: 1 7 8)\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\n1 + 4 = 5 (quedan: 4 5)\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\n4 / 1 = 4 (quedan: 4 4)\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\n4 * 1 = 4 (quedan: 4 4)\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\n4 - 1 = 3 (quedan: 3 4)\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\n4 - 4 = 0 (quedan: 1 4)\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\n4 / 4 = 1 (quedan: 1 4)\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\n4 * 4 = 16 (quedan: 1 16)\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\nEntrada: 3 5 9\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\nPosibles pr\u00f3ximos pasos:\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\n3 + 5 = 8 (quedan: 8 9)\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\n5 / 3 = 1 (quedan: 1 9)\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\n9 + 3 = 12 (quedan: 5 12)\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\n3 * 5 = 15 (quedan: 15 9)\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\n5 - 3 = 2 (quedan: 2 9)\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\n9 - 5 = 4 (quedan: 3 4)\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\n9 / 3 = 3 (quedan: 3 5)\n",
                    "8 - 4 = 4 (quedan: 1 4 4)\n9 - 3 = 6 (quedan: 6 5)\n"
                ],
                "values": [
                    0.0,
                    1.001,
                    40.0,
                    2.001,
                    3.0,
                    0.003,
                    1.001,
                    3.0,
                    22.0,
                    3.0,
                    22.0,
                    3.0,
                    1.001,
                    2.001,
                    0.0,
                    60.0,
                    2.0,
                    0.001,
                    1.002,
                    40.0,
                    0.0,
                    3.0,
                    0.0,
                    1.001,
                    0.0,
                    0.0,
                    0.003,
                    1.0,
                    0.0,
                    2.001,
                    0.0,
                    0.001,
                    0.003,
                    0.0,
                    60.0,
                    60.0,
                    40.0,
                    3.0,
                    3.0,
                    0.0,
                    0.0,
                    3.0,
                    0.0,
                    0.003,
                    0.003,
                    2.0,
                    3.0,
                    3.0,
                    1.002,
                    0.002,
                    0.003,
                    1.002,
                    3.0,
                    0.0,
                    0.0,
                    0,
                    2.0,
                    1.001,
                    0.0
                ],
                "select_new_ys": [
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n",
                    "4 - 1 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 - 1 = 3 (quedan: 3 8)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n4 - 1 = 3 (quedan: 3 8)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n8 / 4 = 2 (quedan: 2 2 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 1 4 8",
                "ys": [
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n",
                    "4 - 1 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 - 1 = 3 (quedan: 3 8)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n4 - 1 = 3 (quedan: 3 8)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n8 / 4 = 2 (quedan: 2 2 8)\n"
                ],
                "new_ys": [
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 + 32 = 33 (quedan: 32 33)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n32 / 2 = 16 (quedan: 1 16)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n32 - 1 = 31 (quedan: 31 32)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 1 32)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n32 - 32 = 0 (quedan: 1)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 + 32 = 33 (quedan: 32 33)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n32 / 2 = 16 (quedan: 1 16)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 32 32)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n32 - 1 = 31 (quedan: 31 32)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n32 - 32 = 0 (quedan: 1)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 * 8 = 16 (quedan: 1 16)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n8 - 2 = 6 (quedan: 1 6)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 * 1 = 2 (quedan: 2 8)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n1 + 8 = 9 (quedan: 2 9)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n8 - 1 = 7 (quedan: 2 7)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n",
                    "4 - 1 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n3 + 8 = 11 (quedan: 11)\n",
                    "4 - 1 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n8 / 3 = 2.67 (quedan: 2.67)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 - 1 = 3 (quedan: 3 8)\n3 + 8 = 11 (quedan: 11)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 - 1 = 3 (quedan: 3 8)\n8 / 3 = 2.666... (quedan: 2.666...)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 - 1 = 3 (quedan: 3 8)\n3 * 8 = 24 (quedan: 24)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 - 1 = 3 (quedan: 3 8)\n8 - 3 = 5 (quedan: 5)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 - 1 = 3 (quedan: 3 8)\nNo hay m\u00e1s operaciones posibles.\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n4 - 1 = 3 (quedan: 3 8)\n3 + 8 = 11 (quedan: 11)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n4 - 1 = 3 (quedan: 3 8)\n8 / 3 = 2.666... (quedan: 2.666...)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n4 - 1 = 3 (quedan: 3 8)\n3 * 8 = 24 (quedan: 24)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n4 - 1 = 3 (quedan: 3 8)\n8 - 3 = 5 (quedan: 5)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n8 / 4 = 2 (quedan: 2 2 8)\n2 + 2 = 4 (quedan: 4 8)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n8 / 4 = 2 (quedan: 2 2 8)\n2 * 2 = 4 (quedan: 4 8)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n8 / 4 = 2 (quedan: 2 2 8)\n2 + 8 = 10 (quedan: 2 10)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n8 / 4 = 2 (quedan: 2 2 8)\n8 / 2 = 4 (quedan: 2 4)\n"
                ],
                "values": [
                    0.003,
                    1.002,
                    1.002,
                    60.0,
                    0.0,
                    0.003,
                    1.002,
                    1.001,
                    1.002,
                    0.0,
                    40.0,
                    1.002,
                    1.002,
                    3.0,
                    3.0,
                    0,
                    2.0,
                    3.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.003,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    3.0,
                    1.002
                ],
                "select_new_ys": [
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 1 32)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 * 1 = 2 (quedan: 2 8)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n8 / 4 = 2 (quedan: 2 2 8)\n2 + 8 = 10 (quedan: 2 10)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n8 - 1 = 7 (quedan: 2 7)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 1 4 8",
                "ys": [
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 1 32)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 * 1 = 2 (quedan: 2 8)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n8 / 4 = 2 (quedan: 2 2 8)\n2 + 8 = 10 (quedan: 2 10)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n8 - 1 = 7 (quedan: 2 7)\n"
                ],
                "new_ys": [
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 1 32)\n1 + 32 = 33 (quedan: 32)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 1 32)\n32 / 2 = 16 (quedan: 16)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 1 32)\n32 - 1 = 31 (quedan: 32)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 32)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 1 32)\n32 - 32 = 0 (no hay pr\u00f3ximos pasos posibles)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n3 + 8 = 11 (queda: 11)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n8 / 3 = 2.666... (queda: 2.666...)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n3 * 8 = 24 (queda: 24)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n8 - 3 = 5 (queda: 5)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 * 1 = 2 (quedan: 2 8)\n2 + 8 = 10 (quedan: 10)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 * 1 = 2 (quedan: 2 8)\n8 / 2 = 4 (quedan: 4)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 * 1 = 2 (quedan: 2 8)\n2 * 8 = 16 (quedan: 16)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 * 1 = 2 (quedan: 2 8)\n8 - 2 = 6 (quedan: 6)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 * 1 = 2 (quedan: 2 8)\nNo hay m\u00e1s combinaciones posibles con estos dos n\u00fameros.\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n1 + 4 = 5 (quedan: 5)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n4 / 2 = 2 (quedan: 2)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n4 - 1 = 3 (quedan: 3)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n1 * 4 = 4 (quedan: 4)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\nLa lista de posibles pr\u00f3ximos pasos depende de los n\u00fameros de entrada y las operaciones permitidas. En este caso, las operaciones permitidas son suma, resta, divisi\u00f3n y multiplicaci\u00f3n.\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n1 + 10 = 11 (quedan: 11)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n10 / 2 = 5 (quedan: 1 5)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n10 - 1 = 9 (quedan: 9)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n1 * 10 = 10 (quedan: 10)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n10 - 10 = 0 (quedan: 1)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n8 / 4 = 2 (quedan: 2 2 8)\n2 + 8 = 10 (quedan: 2 10)\n2 + 10 = 12 (queda: 12)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n8 / 4 = 2 (quedan: 2 2 8)\n2 + 8 = 10 (quedan: 2 10)\n10 / 2 = 5 (queda: 5)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n8 / 4 = 2 (quedan: 2 2 8)\n2 + 8 = 10 (quedan: 2 10)\n2 * 10 = 20 (queda: 20)\n",
                    "1 + 1 = 2 (quedan: 2 4 8)\n8 / 4 = 2 (quedan: 2 2 8)\n2 + 8 = 10 (quedan: 2 10)\n10 - 2 = 8 (queda: 8)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n8 - 1 = 7 (quedan: 2 7)\n2 + 7 = 9 (queda: 9)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n8 - 1 = 7 (quedan: 2 7)\n7 / 2 = 3.5 (queda: 3.5)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n8 - 1 = 7 (quedan: 2 7)\n2 * 7 = 14 (queda: 14)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n8 - 1 = 7 (quedan: 2 7)\n7 - 2 = 5 (queda: 5)\n"
                ],
                "values": [
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    2.001,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n10 / 2 = 5 (quedan: 1 5)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 1 32)\n1 + 32 = 33 (quedan: 32)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 1 32)\n32 / 2 = 16 (quedan: 16)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 1 32)\n32 - 1 = 31 (quedan: 32)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 32)\n",
                    "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 1 32)\n32 - 32 = 0 (no hay pr\u00f3ximos pasos posibles)\n",
                    "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n3 + 8 = 11 (queda: 11)\n"
                ]
            }
        ],
        "idx": 11,
        "ys": [
            "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n10 / 2 = 5 (quedan: 1 5)\n",
            "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 1 32)\n1 + 32 = 33 (quedan: 32)\n",
            "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 1 32)\n32 / 2 = 16 (quedan: 16)\n",
            "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 1 32)\n32 - 1 = 31 (quedan: 32)\n",
            "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 32)\n",
            "1 * 1 = 1 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 1 32)\n32 - 32 = 0 (no hay pr\u00f3ximos pasos posibles)\n",
            "1 * 4 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n3 + 8 = 11 (queda: 11)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 14659,
            "prompt_tokens": 62418,
            "cost": 0.015415400000000001
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 1 5 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 1 = 2 (quedan: 2 5 8)\n",
                    "1 * 5 = 5 (quedan: 1 5 8)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n",
                    "8 - 1 = 7 (quedan: 1 5 7)\n",
                    "8 / 2 = 4 (quedan: 1 4 5)\n",
                    "5 - 1 = 4 (quedan: 1 4 8)\n"
                ],
                "values": [
                    3.0,
                    2.0,
                    60.0,
                    3.0,
                    3.0,
                    3.0,
                    3.0,
                    3.0
                ],
                "select_new_ys": [
                    "8 - 5 = 3 (quedan: 1 3 8)\n",
                    "1 + 1 = 2 (quedan: 2 5 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n",
                    "8 - 1 = 7 (quedan: 1 5 7)\n",
                    "8 / 2 = 4 (quedan: 1 4 5)\n",
                    "5 - 1 = 4 (quedan: 1 4 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 1 5 8",
                "ys": [
                    "8 - 5 = 3 (quedan: 1 3 8)\n",
                    "1 + 1 = 2 (quedan: 2 5 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n",
                    "8 - 1 = 7 (quedan: 1 5 7)\n",
                    "8 / 2 = 4 (quedan: 1 4 5)\n",
                    "5 - 1 = 4 (quedan: 1 4 8)\n"
                ],
                "new_ys": [
                    "8 - 5 = 3 (quedan: 1 3 8)\n1 + 3 = 4 (quedan: 4 8)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n3 + 8 = 11 (quedan: 1 11)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n8 - 3 = 5 (quedan: 1 5)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n3 - 1 = 2 (quedan: 2 8)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n8 / 3 = 2 (quedan: 1 2)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n8 - 1 = 7 (quedan: 3 7)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n",
                    "1 + 1 = 2 (quedan: 2 5 8)\n2 + 5 = 7 (quedan: 7 8)\n",
                    "1 + 1 = 2 (quedan: 2 5 8)\n5 - 2 = 3 (quedan: 3 8)\n",
                    "1 + 1 = 2 (quedan: 2 5 8)\n2 * 5 = 10 (quedan: 10 8)\n",
                    "1 + 1 = 2 (quedan: 2 5 8)\n5 / 2 = 2.5 (no es posible continuar con n\u00fameros enteros)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n1 + 6 = 7 (quedan: 7 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 + 1 = 9 (quedan: 6 8 9)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n1 * 6 = 6 (quedan: 6 8 6)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 - 1 = 5 (quedan: 5 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 / 2 = 4 (quedan: 1 4 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 1 = 7 (quedan: 6 7 8)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n6 + 5 = 11 (quedan: 11 8)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n6 / 5 = 1.2 (no es posible continuar con n\u00fameros decimales)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n5 + 8 = 13 (quedan: 6 13)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n5 * 8 = 40 (quedan: 6 40)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 - 6 = 2 (quedan: 2 5 8)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 - 5 = 3 (quedan: 3 6 8)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n6 - 5 = 1 (no es posible continuar con n\u00fameros negativos)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 / 5 = 1.6 (no es posible continuar con n\u00fameros decimales)\n",
                    "8 - 1 = 7 (quedan: 1 5 7)\n1 + 5 = 6 (quedan: 6 7)\n",
                    "8 - 1 = 7 (quedan: 1 5 7)\n5 + 7 = 12 (quedan: 1 12)\n",
                    "8 - 1 = 7 (quedan: 1 5 7)\n1 * 5 = 5 (quedan: 5 7)\n",
                    "8 - 1 = 7 (quedan: 1 5 7)\n7 - 5 = 2 (quedan: 1 2)\n",
                    "8 - 1 = 7 (quedan: 1 5 7)\n5 - 1 = 4 (quedan: 4 7)\n",
                    "8 - 1 = 7 (quedan: 1 5 7)\n7 - 1 = 6 (quedan: 5 6)\n",
                    "8 - 1 = 7 (quedan: 1 5 7)\n7 / 5 = 1 (quedan: 1 5)\n",
                    "8 - 1 = 7 (quedan: 1 5 7)\n5 / 1 = 5 (quedan: 7 5)\n",
                    "8 / 2 = 4 (quedan: 1 4 5)\n1 + 4 = 5 (quedan: 5 5)\n",
                    "8 / 2 = 4 (quedan: 1 4 5)\n4 / 1 = 4 (quedan: 4 5)\n",
                    "8 / 2 = 4 (quedan: 1 4 5)\n5 + 1 = 6 (quedan: 4 6)\n",
                    "8 / 2 = 4 (quedan: 1 4 5)\n1 * 4 = 4 (quedan: 4 5)\n",
                    "8 / 2 = 4 (quedan: 1 4 5)\n4 - 1 = 3 (quedan: 3 4)\n",
                    "8 / 2 = 4 (quedan: 1 4 5)\n5 - 4 = 1 (quedan: 1 4)\n",
                    "8 / 2 = 4 (quedan: 1 4 5)\n5 / 1 = 5 (quedan: 5 4)\n",
                    "8 / 2 = 4 (quedan: 1 4 5)\n5 - 1 = 4 (quedan: 4 4)\n",
                    "5 - 1 = 4 (quedan: 1 4 8)\n1 + 4 = 5 (quedan: 5 8)\n",
                    "5 - 1 = 4 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n",
                    "5 - 1 = 4 (quedan: 1 4 8)\n8 - 4 = 4 (quedan: 1 4)\n",
                    "5 - 1 = 4 (quedan: 1 4 8)\n4 / 1 = 4 (quedan: 4 8)\n",
                    "5 - 1 = 4 (quedan: 1 4 8)\n1 * 8 = 8 (quedan: 4 8)\n",
                    "5 - 1 = 4 (quedan: 1 4 8)\n8 - 1 = 7 (quedan: 7 4)\n",
                    "5 - 1 = 4 (quedan: 1 4 8)\n8 / 4 = 2 (quedan: 1 2)\n",
                    "5 - 1 = 4 (quedan: 1 4 8)\n8 - 4 = 4 (quedan: 1 4)\n"
                ],
                "values": [
                    0.0,
                    1.001,
                    40.0,
                    2.001,
                    3.0,
                    1.002,
                    0.001,
                    40.0,
                    0.0,
                    40.0,
                    0.0,
                    0.003,
                    0.0,
                    60.0,
                    3.0,
                    3.0,
                    0.0,
                    60.0,
                    3.0,
                    3.0,
                    0.001,
                    0.003,
                    0.0,
                    0.0,
                    3.0,
                    21.0,
                    0.003,
                    0.003,
                    0.001,
                    3.0,
                    0.0,
                    1.002,
                    0.0,
                    0.0,
                    2.001,
                    1.0,
                    2.0,
                    0.0,
                    0.0,
                    0.0,
                    2.0,
                    3.0,
                    0.001,
                    0.003,
                    0.0,
                    60.0,
                    3.0,
                    0.0,
                    0.0,
                    2.0,
                    1.002,
                    0
                ],
                "select_new_ys": [
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n",
                    "5 - 1 = 4 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n",
                    "1 + 1 = 2 (quedan: 2 5 8)\n5 - 2 = 3 (quedan: 3 8)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 - 5 = 3 (quedan: 3 6 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 1 5 8",
                "ys": [
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n",
                    "5 - 1 = 4 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n",
                    "1 + 1 = 2 (quedan: 2 5 8)\n5 - 2 = 3 (quedan: 3 8)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 - 5 = 3 (quedan: 3 6 8)\n"
                ],
                "new_ys": [
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n1 + 3 = 4 (quedan: 4 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n3 + 8 = 11 (quedan: 1 11)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n3 - 1 = 2 (quedan: 2 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n8 - 3 = 5 (quedan: 1 5)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n8 / 3 = 2 (quedan: 1 2)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\nNo hay m\u00e1s posibles pasos.\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n1 * 2 = 2 (quedan: 2 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n2 * 8 = 16 (quedan: 1 16)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n8 - 2 = 6 (quedan: 1 6)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n8 - 1 = 7 (quedan: 2 7)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n8 / 1 = 8 (quedan: 2 8)\n",
                    "5 - 1 = 4 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 + 32 = 33 (quedan: 32)\n",
                    "5 - 1 = 4 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n32 / 2 = 16 (quedan: 16)\n",
                    "5 - 1 = 4 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n32 - 1 = 31 (quedan: 32)\n",
                    "5 - 1 = 4 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n1 * 32 = 32 (quedan: 32)\n",
                    "5 - 1 = 4 (quedan: 1 4 8)\n4 * 8 = 32 (quedan: 1 32)\n32 - 32 = 0 (no hay m\u00e1s pasos posibles)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n3 + 8 = 11 (quedan: 11)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n8 / 3 = 2.67 (no se puede continuar con n\u00fameros decimales)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n1 + 24 = 25 (quedan: 25)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n24 / 2 = 12 (quedan: 1 12)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n24 - 1 = 23 (quedan: 23)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n1 * 24 = 24 (quedan: 24)\n",
                    "8 - 5 = 3 (quedan: 1 3 8)\n3 * 8 = 24 (quedan: 1 24)\n24 - 24 = 0 (quedan: 0)\n",
                    "1 + 1 = 2 (quedan: 2 5 8)\n5 - 2 = 3 (quedan: 3 8)\n3 + 8 = 11 (quedan: 11)\n",
                    "1 + 1 = 2 (quedan: 2 5 8)\n5 - 2 = 3 (quedan: 3 8)\n8 / 3 = 2.666... (quedan: 2.666..., 8)\n",
                    "1 + 1 = 2 (quedan: 2 5 8)\n5 - 2 = 3 (quedan: 3 8)\n3 * 8 = 24 (quedan: 24)\n",
                    "1 + 1 = 2 (quedan: 2 5 8)\n5 - 2 = 3 (quedan: 3 8)\n8 - 3 = 5 (quedan: 5)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 - 5 = 3 (quedan: 3 6 8)\n3 + 6 = 9 (quedan: 8 9)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 - 5 = 3 (quedan: 3 6 8)\n6 / 3 = 2 (quedan: 2 8)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 - 5 = 3 (quedan: 3 6 8)\n8 + 3 = 11 (quedan: 6 11)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 - 5 = 3 (quedan: 3 6 8)\n3 * 6 = 18 (quedan: 8 18)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 - 5 = 3 (quedan: 3 6 8)\n6 - 3 = 3 (quedan: 3 8)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 - 5 = 3 (quedan: 3 6 8)\n8 - 3 = 5 (quedan: 5 6)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 - 5 = 3 (quedan: 3 6 8)\n8 / 3 = 2 (quedan: 2 6)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 - 5 = 3 (quedan: 3 6 8)\n8 - 6 = 2 (quedan: 2 8)\n"
                ],
                "values": [
                    0.0,
                    1.001,
                    40.0,
                    3.0,
                    2.001,
                    1.002,
                    0.003,
                    40.0,
                    3.0,
                    3.0,
                    1.002,
                    1.002,
                    3.0,
                    2.0,
                    3.0,
                    0,
                    0.0,
                    0,
                    0,
                    0.003,
                    0.0,
                    0.003,
                    0.0,
                    3.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    3.0,
                    0.0,
                    0.0,
                    1.002,
                    3.0,
                    1.001,
                    0.0,
                    40.0,
                    0.0,
                    1.002,
                    3.0
                ],
                "select_new_ys": [
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 - 5 = 3 (quedan: 3 6 8)\n6 - 3 = 3 (quedan: 3 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n3 - 1 = 2 (quedan: 2 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n1 * 2 = 2 (quedan: 2 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 1 5 8",
                "ys": [
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 - 5 = 3 (quedan: 3 6 8)\n6 - 3 = 3 (quedan: 3 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n3 - 1 = 2 (quedan: 2 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n1 * 2 = 2 (quedan: 2 8)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n"
                ],
                "new_ys": [
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n3 + 8 = 11 (quedan: 11)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n8 / 3 = 2.6666666666666665 (quedan: 2.6666666666666665)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n3 * 8 = 24 (quedan: 24)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n8 - 3 = 5 (quedan: 5)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n3 + 8 = 11 (queda: 11)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n8 / 3 = 2 (queda: 2)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n3 * 8 = 24 (queda: 24)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n8 - 3 = 5 (queda: 5)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 - 5 = 3 (quedan: 3 6 8)\n6 - 3 = 3 (quedan: 3 8)\n3 + 8 = 11 (quedan: 11)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 - 5 = 3 (quedan: 3 6 8)\n6 - 3 = 3 (quedan: 3 8)\n8 / 3 = 2.666... (quedan: 2.666...)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 - 5 = 3 (quedan: 3 6 8)\n6 - 3 = 3 (quedan: 3 8)\n3 * 8 = 24 (quedan: 24)\n",
                    "1 + 5 = 6 (quedan: 6 5 8)\n8 - 5 = 3 (quedan: 3 6 8)\n6 - 3 = 3 (quedan: 3 8)\n8 - 3 = 5 (quedan: 5)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n3 - 1 = 2 (quedan: 2 8)\n2 + 8 = 10 (quedan: 10)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n3 - 1 = 2 (quedan: 2 8)\n8 / 2 = 4 (quedan: 4)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n3 - 1 = 2 (quedan: 2 8)\n2 * 8 = 16 (quedan: 16)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n3 - 1 = 2 (quedan: 2 8)\n8 - 2 = 6 (quedan: 6)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n1 * 2 = 2 (quedan: 2 8)\n2 + 8 = 10 (quedan: 10)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n1 * 2 = 2 (quedan: 2 8)\n2 * 8 = 16 (quedan: 16)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n1 * 2 = 2 (quedan: 2 8)\n8 / 2 = 4 (quedan: 4)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n1 * 2 = 2 (quedan: 2 8)\n8 - 2 = 6 (quedan: 6)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n1 + 10 = 11 (quedan: 11)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n10 / 2 = 5 (quedan: 1 5)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n10 - 1 = 9 (quedan: 9)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n1 * 10 = 10 (quedan: 10)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n10 - 10 = 0 (el juego termina)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n1 + 4 = 5 (quedan: 5)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n4 / 2 = 2 (quedan: 2)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n4 - 1 = 3 (quedan: 3)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n8 / 2 = 4 (quedan: 1 4)\n1 * 4 = 4 (quedan: 4)\n"
                ],
                "values": [
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    2.001,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n10 / 2 = 5 (quedan: 1 5)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n3 + 8 = 11 (quedan: 11)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n8 / 3 = 2.6666666666666665 (quedan: 2.6666666666666665)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n3 * 8 = 24 (quedan: 24)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n8 - 3 = 5 (quedan: 5)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n3 + 8 = 11 (queda: 11)\n",
                    "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n8 / 3 = 2 (queda: 2)\n"
                ]
            }
        ],
        "idx": 12,
        "ys": [
            "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n2 + 8 = 10 (quedan: 1 10)\n10 / 2 = 5 (quedan: 1 5)\n",
            "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n3 + 8 = 11 (quedan: 11)\n",
            "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n8 / 3 = 2.6666666666666665 (quedan: 2.6666666666666665)\n",
            "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n3 * 8 = 24 (quedan: 24)\n",
            "5 + 1 = 6 (quedan: 1 6 8)\n6 / 2 = 3 (quedan: 1 3 8)\n1 * 3 = 3 (quedan: 3 8)\n8 - 3 = 5 (quedan: 5)\n",
            "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n3 + 8 = 11 (queda: 11)\n",
            "5 + 1 = 6 (quedan: 1 6 8)\n8 - 6 = 2 (quedan: 1 2 8)\n1 + 2 = 3 (quedan: 3 8)\n8 / 3 = 2 (queda: 2)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 19756,
            "prompt_tokens": 81174,
            "cost": 0.020186000000000003
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 6 11 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "4 + 6 = 10 (quedan: 10 11 11)\n",
                    "6 / 4 = 1.5 (No es posible continuar con n\u00fameros decimales)\n",
                    "11 + 4 = 15 (quedan: 6 11 15)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n",
                    "11 - 6 = 5 (quedan: 4 5 11)\n",
                    "11 / 4 = 2.75 (No es posible continuar con n\u00fameros decimales)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n"
                ],
                "values": [
                    0.002,
                    0.003,
                    22.0,
                    2.0,
                    60.0,
                    22.0,
                    0.003,
                    22.0
                ],
                "select_new_ys": [
                    "6 - 4 = 2 (quedan: 2 11 11)\n",
                    "11 + 4 = 15 (quedan: 6 11 15)\n",
                    "11 - 6 = 5 (quedan: 4 5 11)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n",
                    "6 / 4 = 1.5 (No es posible continuar con n\u00fameros decimales)\n",
                    "11 / 4 = 2.75 (No es posible continuar con n\u00fameros decimales)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 6 11 11",
                "ys": [
                    "6 - 4 = 2 (quedan: 2 11 11)\n",
                    "11 + 4 = 15 (quedan: 6 11 15)\n",
                    "11 - 6 = 5 (quedan: 4 5 11)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n",
                    "6 / 4 = 1.5 (No es posible continuar con n\u00fameros decimales)\n",
                    "11 / 4 = 2.75 (No es posible continuar con n\u00fameros decimales)\n"
                ],
                "new_ys": [
                    "6 - 4 = 2 (quedan: 2 11 11)\n2 + 11 = 13 (quedan: 11 13)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n11 / 2 = 5.5 (no es un n\u00famero entero)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n11 + 2 = 13 (quedan: 11 13)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n2 * 11 = 22 (quedan: 11 22)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n11 - 2 = 9 (quedan: 9 11)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n11 - 11 = 0 (quedan: 2 0)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n11 / 2 = 5.5 (no es un n\u00famero entero)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n11 - 2 = 9 (quedan: 9 9)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\nEntrada: 3 6 8\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\nPosibles pr\u00f3ximos pasos:\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n3 + 6 = 9 (quedan: 8 9)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n6 / 3 = 2 (quedan: 2 8)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n8 + 3 = 11 (quedan: 6 11)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n3 * 6 = 18 (quedan: 8 18)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n6 - 3 = 3 (quedan: 3 8)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n8 - 6 = 2 (quedan: 2 8)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n8 / 3 = 2.6666666666666665 (no es un n\u00famero entero)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n8 - 3 = 5 (quedan: 5 6)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\nEntrada: 5 5 10\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\nPosibles pr\u00f3ximos pasos:\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n5 + 5 = 10 (quedan: 10 10)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n5 / 5 = 1 (quedan: 1 10)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n10 + 5 = 15 (quedan: 5 15)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n5 * 5 = 25 (quedan: 10 25)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n5 - 5 = 0 (quedan: 0 10)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n10 - 5 = 5 (quedan: 5 5)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n10 / 5 = 2 (quedan: 2 5)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n10 - 5 = 5 (quedan: 5 5)\n",
                    "11 + 4 = 15 (quedan: 6 11 15)\n6 + 11 = 17 (quedan: 15 17)\n",
                    "11 + 4 = 15 (quedan: 6 11 15)\n11 - 6 = 5 (quedan: 5 15)\n",
                    "11 + 4 = 15 (quedan: 6 11 15)\n6 * 11 = 66 (quedan: 15 66)\n",
                    "11 + 4 = 15 (quedan: 6 11 15)\n11 / 6 = 1.83 (no se puede continuar con n\u00fameros decimales)\n",
                    "11 + 4 = 15 (quedan: 6 11 15)\n6 - 11 = -5 (no se puede continuar con n\u00fameros negativos)\n",
                    "11 + 4 = 15 (quedan: 6 11 15)\n15 + 6 = 21 (quedan: 11 21)\n",
                    "11 + 4 = 15 (quedan: 6 11 15)\n15 - 6 = 9 (quedan: 9 11)\n",
                    "11 + 4 = 15 (quedan: 6 11 15)\n6 / 15 = 0.4 (no se puede continuar con n\u00fameros decimales)\n",
                    "11 - 6 = 5 (quedan: 4 5 11)\n4 + 5 = 9 (quedan: 9 11)\n",
                    "11 - 6 = 5 (quedan: 4 5 11)\n5 - 4 = 1 (quedan: 1 11)\n",
                    "11 - 6 = 5 (quedan: 4 5 11)\n11 - 4 = 7 (quedan: 4 7)\n",
                    "11 - 6 = 5 (quedan: 4 5 11)\n4 * 5 = 20 (quedan: 20 11)\n",
                    "11 - 6 = 5 (quedan: 4 5 11)\n5 + 11 = 16 (quedan: 4 16)\n",
                    "11 - 6 = 5 (quedan: 4 5 11)\n11 - 5 = 6 (quedan: 4 6)\n",
                    "11 - 6 = 5 (quedan: 4 5 11)\n4 / 5 = 0.8 (no es posible continuar)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n6 + 7 = 13 (quedan: 11 13)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n6 / 7 = 0.857 (no se puede continuar)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n7 / 6 = 1.167 (no se puede continuar)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 + 6 = 17 (quedan: 7 17)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n6 * 7 = 42 (quedan: 11 42)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n7 - 6 = 1 (quedan: 1 11)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 - 7 = 4 (quedan: 4 7)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 / 7 = 1.57 (no se puede continuar)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 + 11 = 22 (quedan: 22 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n24 - 11 = 13 (quedan: 11 13)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 * 11 = 121 (quedan: 121 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 - 11 = 0 (quedan: 0 11 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n24 - 11 = 13 (quedan: 11 13)\n",
                    "6 / 4 = 1.5 (No es posible continuar con n\u00fameros decimales)\nNo hay posibles pr\u00f3ximos pasos debido a que la entrada es inv\u00e1lida.\n",
                    "11 / 4 = 2.75 (No es posible continuar con n\u00fameros decimales)\nNo es posible continuar con n\u00fameros decimales. Por favor ingrese una entrada v\u00e1lida de n\u00fameros enteros.\n"
                ],
                "values": [
                    0.001,
                    0.003,
                    0.001,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    2.001,
                    0.003,
                    0.003,
                    1.002,
                    3.0,
                    1.001,
                    0.0,
                    40.0,
                    3.0,
                    0.003,
                    0.0,
                    0.003,
                    0,
                    1.002,
                    3.0,
                    0.0,
                    0.0,
                    0.0,
                    2.0,
                    0.002,
                    0,
                    1.0,
                    0.0,
                    0.001,
                    0.003,
                    0.003,
                    0.0,
                    0.0,
                    0.003,
                    0.0,
                    1.001,
                    0.0,
                    0.0,
                    0.001,
                    0.0,
                    0.003,
                    0.001,
                    0.003,
                    0.003,
                    60.0,
                    0.0,
                    1.001,
                    0.0,
                    0.003,
                    0.001,
                    2.001,
                    0.001,
                    0.0,
                    2.0,
                    0,
                    0.003,
                    0.003
                ],
                "select_new_ys": [
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 + 6 = 17 (quedan: 7 17)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n6 - 3 = 3 (quedan: 3 8)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n6 / 3 = 2 (quedan: 2 8)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n8 - 6 = 2 (quedan: 2 8)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n5 / 5 = 1 (quedan: 1 10)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n11 - 2 = 9 (quedan: 9 9)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 6 11 11",
                "ys": [
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 + 6 = 17 (quedan: 7 17)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n6 - 3 = 3 (quedan: 3 8)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n6 / 3 = 2 (quedan: 2 8)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n8 - 6 = 2 (quedan: 2 8)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n5 / 5 = 1 (quedan: 1 10)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n11 - 2 = 9 (quedan: 9 9)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n"
                ],
                "new_ys": [
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 + 6 = 17 (quedan: 7 17)\n7 + 17 = 24 (quedan: 24)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 + 6 = 17 (quedan: 7 17)\n17 - 7 = 10 (quedan: 10)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 + 6 = 17 (quedan: 7 17)\n7 * 17 = 119 (quedan: 119)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 + 6 = 17 (quedan: 7 17)\n17 / 7 = 2.43 (quedan: 2.43)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n6 - 3 = 3 (quedan: 3 8)\n3 + 8 = 11 (quedan: 11)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n6 - 3 = 3 (quedan: 3 8)\n8 / 3 = 2.666... (quedan: 2.666...)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n6 - 3 = 3 (quedan: 3 8)\n3 * 8 = 24 (quedan: 24)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n6 - 3 = 3 (quedan: 3 8)\n8 - 3 = 5 (quedan: 5)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n6 / 3 = 2 (quedan: 2 8)\n2 + 8 = 10 (quedan: 10)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n6 / 3 = 2 (quedan: 2 8)\n8 / 2 = 4 (quedan: 4)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n6 / 3 = 2 (quedan: 2 8)\n2 * 8 = 16 (quedan: 16)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n6 / 3 = 2 (quedan: 2 8)\n8 - 2 = 6 (quedan: 6)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n8 - 6 = 2 (quedan: 2 8)\n2 + 8 = 10 (quedan: 10)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n8 - 6 = 2 (quedan: 2 8)\n8 / 2 = 4 (quedan: 4)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n8 - 6 = 2 (quedan: 2 8)\n2 * 8 = 16 (quedan: 16)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n8 - 6 = 2 (quedan: 2 8)\n8 - 2 = 6 (quedan: 6)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n5 / 5 = 1 (quedan: 1 10)\n1 + 10 = 11 (quedan: 11)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n5 / 5 = 1 (quedan: 1 10)\n10 / 2 = 5 (quedan: 1 5)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n5 / 5 = 1 (quedan: 1 10)\n10 - 1 = 9 (quedan: 9)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n5 / 5 = 1 (quedan: 1 10)\n1 * 10 = 10 (quedan: 10)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n11 - 2 = 9 (quedan: 9 9)\n9 + 9 = 18 (quedan: 18)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n11 - 2 = 9 (quedan: 9 9)\n9 / 9 = 1 (quedan: 1)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n11 - 2 = 9 (quedan: 9 9)\n9 * 9 = 81 (quedan: 81)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n11 - 2 = 9 (quedan: 9 9)\n9 - 9 = 0 (quedan: 0)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n1 + 11 = 12 (quedan: 12 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n11 * 24 = 264 (quedan: 1 264)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n11 - 1 = 10 (quedan: 10 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 / 11 = 2 (quedan: 1 2 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 - 11 = 13 (quedan: 1 13 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n1 * 11 = 11 (quedan: 11 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n11 + 24 = 35 (quedan: 1 35)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 - 1 = 23 (quedan: 11 23)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    2.001,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    21.0,
                    0.0,
                    2.001,
                    1.0,
                    0.0,
                    1.001,
                    0.0
                ],
                "select_new_ys": [
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n11 * 24 = 264 (quedan: 1 264)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n5 / 5 = 1 (quedan: 1 10)\n10 / 2 = 5 (quedan: 1 5)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 / 11 = 2 (quedan: 1 2 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n11 + 24 = 35 (quedan: 1 35)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 - 11 = 13 (quedan: 1 13 24)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 + 6 = 17 (quedan: 7 17)\n7 + 17 = 24 (quedan: 24)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 + 6 = 17 (quedan: 7 17)\n17 - 7 = 10 (quedan: 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 6 11 11",
                "ys": [
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n11 * 24 = 264 (quedan: 1 264)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n5 / 5 = 1 (quedan: 1 10)\n10 / 2 = 5 (quedan: 1 5)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 / 11 = 2 (quedan: 1 2 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n11 + 24 = 35 (quedan: 1 35)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 - 11 = 13 (quedan: 1 13 24)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 + 6 = 17 (quedan: 7 17)\n7 + 17 = 24 (quedan: 24)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 + 6 = 17 (quedan: 7 17)\n17 - 7 = 10 (quedan: 10)\n"
                ],
                "new_ys": [
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n11 * 24 = 264 (quedan: 1 264)\n1 * 264 = 264 (quedan: 264)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n11 * 24 = 264 (quedan: 1 264)\n264 / 2 = 132 (quedan: 132)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n11 * 24 = 264 (quedan: 1 264)\n264 - 1 = 263 (quedan: 263)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n11 * 24 = 264 (quedan: 1 264)\n264 + 1 = 265 (quedan: 265)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n5 / 5 = 1 (quedan: 1 10)\n10 / 2 = 5 (quedan: 1 5)\n1 + 5 = 6 (quedan: 6)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n5 / 5 = 1 (quedan: 1 10)\n10 / 2 = 5 (quedan: 1 5)\n5 - 1 = 4 (quedan: 4)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n5 / 5 = 1 (quedan: 1 10)\n10 / 2 = 5 (quedan: 1 5)\n1 * 5 = 5 (quedan: 5)\n",
                    "6 - 4 = 2 (quedan: 2 11 11)\n5 / 5 = 1 (quedan: 1 10)\n10 / 2 = 5 (quedan: 1 5)\n5 / 1 = 5 (quedan: 5)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 / 11 = 2 (quedan: 1 2 24)\n1 + 2 = 3 (quedan: 3 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 / 11 = 2 (quedan: 1 2 24)\n2 * 1 = 2 (quedan: 2 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 / 11 = 2 (quedan: 1 2 24)\n24 / 2 = 12 (quedan: 1 12)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 / 11 = 2 (quedan: 1 2 24)\n24 - 1 = 23 (quedan: 2 23)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 / 11 = 2 (quedan: 1 2 24)\n2 + 24 = 26 (quedan: 1 26)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 / 11 = 2 (quedan: 1 2 24)\n24 - 2 = 22 (quedan: 1 22)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 / 11 = 2 (quedan: 1 2 24)\n1 * 24 = 24 (quedan: 2 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 / 11 = 2 (quedan: 1 2 24)\n24 / 1 = 24 (quedan: 2 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n11 + 24 = 35 (quedan: 1 35)\nNo hay posibles pr\u00f3ximos pasos, ya que solo hay dos n\u00fameros y no se pueden realizar operaciones con ellos.\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 - 11 = 13 (quedan: 1 13 24)\n1 + 13 = 14 (quedan: 14 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 - 11 = 13 (quedan: 1 13 24)\n13 - 1 = 12 (quedan: 12 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 - 11 = 13 (quedan: 1 13 24)\n13 * 1 = 13 (quedan: 13 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 - 11 = 13 (quedan: 1 13 24)\n1 * 24 = 24 (quedan: 13 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 - 11 = 13 (quedan: 1 13 24)\n24 - 1 = 23 (quedan: 1 23)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 - 11 = 13 (quedan: 1 13 24)\n24 - 13 = 11 (quedan: 1 11)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 - 11 = 13 (quedan: 1 13 24)\n24 / 13 = 1 (quedan: 1 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 - 11 = 13 (quedan: 1 13 24)\n13 / 1 = 13 (quedan: 13 24)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 + 6 = 17 (quedan: 7 17)\n7 + 17 = 24 (quedan: 24)\nRespuesta: (11 - 4) * (11 + 6) = 24\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 + 6 = 17 (quedan: 7 17)\n17 - 7 = 10 (quedan: 10)\n10 + 10 = 20 (quedan: 20)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 + 6 = 17 (quedan: 7 17)\n17 - 7 = 10 (quedan: 10)\n10 / 2 = 5 (quedan: 5)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 + 6 = 17 (quedan: 7 17)\n17 - 7 = 10 (quedan: 10)\n10 * 10 = 100 (quedan: 100)\n",
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 + 6 = 17 (quedan: 7 17)\n17 - 7 = 10 (quedan: 10)\n10 - 2 = 8 (quedan: 8)\n"
                ],
                "values": [
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0,
                    3.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    1.001,
                    40.0,
                    0,
                    40.001,
                    0,
                    0.0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "11 - 4 = 7 (quedan: 6 7 11)\n11 + 6 = 17 (quedan: 7 17)\n7 + 17 = 24 (quedan: 24)\nRespuesta: (11 - 4) * (11 + 6) = 24\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 - 11 = 13 (quedan: 1 13 24)\n24 / 13 = 1 (quedan: 1 24)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 / 11 = 2 (quedan: 1 2 24)\n24 / 2 = 12 (quedan: 1 12)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 - 11 = 13 (quedan: 1 13 24)\n24 - 13 = 11 (quedan: 1 11)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n11 * 24 = 264 (quedan: 1 264)\n1 * 264 = 264 (quedan: 264)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n11 * 24 = 264 (quedan: 1 264)\n264 / 2 = 132 (quedan: 132)\n",
                    "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n11 * 24 = 264 (quedan: 1 264)\n264 - 1 = 263 (quedan: 263)\n"
                ]
            }
        ],
        "idx": 13,
        "ys": [
            "11 - 4 = 7 (quedan: 6 7 11)\n11 + 6 = 17 (quedan: 7 17)\n7 + 17 = 24 (quedan: 24)\nRespuesta: (11 - 4) * (11 + 6) = 24\n",
            "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 - 11 = 13 (quedan: 1 13 24)\n24 / 13 = 1 (quedan: 1 24)\n",
            "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 / 11 = 2 (quedan: 1 2 24)\n24 / 2 = 12 (quedan: 1 12)\n",
            "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n24 - 11 = 13 (quedan: 1 13 24)\n24 - 13 = 11 (quedan: 1 11)\n",
            "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n11 * 24 = 264 (quedan: 1 264)\n1 * 264 = 264 (quedan: 264)\n",
            "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n11 * 24 = 264 (quedan: 1 264)\n264 / 2 = 132 (quedan: 132)\n",
            "4 * 6 = 24 (quedan: 11 11 24)\n11 / 11 = 1 (quedan: 1 11 24)\n11 * 24 = 264 (quedan: 1 264)\n264 - 1 = 263 (quedan: 263)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 26494,
            "prompt_tokens": 112585,
            "cost": 0.0278158
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 1 3 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "1 + 1 = 2 (quedan: 2 3 12)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n",
                    "12 + 1 = 13 (quedan: 1 1 13)\n",
                    "12 / 3 = 4 (quedan: 1 1 4)\n",
                    "12 / 2 = 6 (quedan: 1 1 6)\n",
                    "12 - 1 = 11 (quedan: 1 1 11)\n"
                ],
                "values": [
                    3.0,
                    3.0,
                    3.0,
                    3.0,
                    3.0,
                    3.0,
                    3.0,
                    3.0
                ],
                "select_new_ys": [
                    "1 + 1 = 2 (quedan: 2 3 12)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n",
                    "12 + 1 = 13 (quedan: 1 1 13)\n",
                    "12 / 3 = 4 (quedan: 1 1 4)\n",
                    "12 / 2 = 6 (quedan: 1 1 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 1 3 12",
                "ys": [
                    "1 + 1 = 2 (quedan: 2 3 12)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n",
                    "12 + 1 = 13 (quedan: 1 1 13)\n",
                    "12 / 3 = 4 (quedan: 1 1 4)\n",
                    "12 / 2 = 6 (quedan: 1 1 6)\n"
                ],
                "new_ys": [
                    "1 + 1 = 2 (quedan: 2 3 12)\n2 + 3 = 5 (quedan: 5 12)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n2 * 3 = 6 (quedan: 6 12)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 + 12 = 15 (quedan: 2 15)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 * 12 = 36 (quedan: 2 36)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 - 2 = 1 (quedan: 1 12)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n12 - 2 = 10 (quedan: 2 10)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n12 / 2 = 6 (quedan: 2 6)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n12 - 3 = 9 (quedan: 2 9)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n1 + 3 = 4 (quedan: 4 12)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 + 12 = 15 (quedan: 1 15)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n1 * 3 = 3 (quedan: 3 12)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 - 1 = 2 (quedan: 2 12)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n12 - 3 = 9 (quedan: 1 9)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n12 / 3 = 4 (quedan: 1 4)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n12 - 1 = 11 (quedan: 3 11)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n1 + 4 = 5 (quedan: 5 12)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n4 * 12 = 48 (quedan: 1 48)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n12 / 4 = 3 (quedan: 1 3)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n4 - 1 = 3 (quedan: 3 12)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n12 - 4 = 8 (quedan: 1 8)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n1 * 4 = 4 (quedan: 4 12)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n12 / 1 = 12 (quedan: 4 12)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n12 - 1 = 11 (quedan: 4 11)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n1 + 3 = 4 (quedan: 4 12)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 + 12 = 15 (quedan: 1 15)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n1 * 3 = 3 (quedan: 3 12)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n12 / 3 = 4 (quedan: 1 4)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n12 - 3 = 9 (quedan: 1 9)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n12 - 1 = 11 (quedan: 3 11)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n12 / 1 = 12 (quedan: 3 12)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\nEntrada: 5 5 5\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\nPosibles pr\u00f3ximos pasos:\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n5 + 5 = 10 (quedan: 5 10)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n5 * 5 = 25 (quedan: 5 25)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n5 - 5 = 0 (quedan: 5 5)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n5 / 5 = 1 (quedan: 1 5)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n5 - 1 = 4 (quedan: 4 5)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n5 + 1 = 6 (quedan: 5 6)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n5 * 5 = 25 (quedan: 5 25)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n5 / 5 = 1 (quedan: 1 5)\n",
                    "12 + 1 = 13 (quedan: 1 1 13)\n1 + 1 = 2 (quedan: 2 13)\n",
                    "12 + 1 = 13 (quedan: 1 1 13)\n1 * 1 = 1 (quedan: 1 13)\n",
                    "12 + 1 = 13 (quedan: 1 1 13)\n13 + 1 = 14 (quedan: 1 14)\n",
                    "12 + 1 = 13 (quedan: 1 1 13)\n13 - 1 = 12 (quedan: 1 12)\n",
                    "12 + 1 = 13 (quedan: 1 1 13)\n13 / 1 = 13 (quedan: 1 13)\n",
                    "12 + 1 = 13 (quedan: 1 1 13)\n1 - 1 = 0 (quedan: 0 13)\n",
                    "12 + 1 = 13 (quedan: 1 1 13)\n13 - 1 = 12 (quedan: 1 12)\n",
                    "12 + 1 = 13 (quedan: 1 1 13)\n13 * 1 = 13 (quedan: 1 13)\n",
                    "12 / 3 = 4 (quedan: 1 1 4)\n1 + 1 = 2 (quedan: 2 4)\n",
                    "12 / 3 = 4 (quedan: 1 1 4)\n1 * 1 = 1 (quedan: 1 4)\n",
                    "12 / 3 = 4 (quedan: 1 1 4)\n4 - 1 = 3 (quedan: 1 3)\n",
                    "12 / 3 = 4 (quedan: 1 1 4)\n4 / 1 = 4 (quedan: 4)\n",
                    "12 / 3 = 4 (quedan: 1 1 4)\n1 + 4 = 5 (quedan: 1 5)\n",
                    "12 / 3 = 4 (quedan: 1 1 4)\n1 * 4 = 4 (quedan: 4)\n",
                    "12 / 3 = 4 (quedan: 1 1 4)\n4 - 4 = 0 (quedan: 0)\n",
                    "12 / 2 = 6 (quedan: 1 1 6)\n1 + 1 = 2 (quedan: 2 6)\n",
                    "12 / 2 = 6 (quedan: 1 1 6)\n1 * 1 = 1 (quedan: 1 6)\n",
                    "12 / 2 = 6 (quedan: 1 1 6)\n6 + 1 = 7 (quedan: 1 7)\n",
                    "12 / 2 = 6 (quedan: 1 1 6)\n6 - 1 = 5 (quedan: 5 1)\n",
                    "12 / 2 = 6 (quedan: 1 1 6)\n6 / 1 = 6 (quedan: 6 1)\n",
                    "12 / 2 = 6 (quedan: 1 1 6)\n1 - 1 = 0 (quedan: 6 0)\n"
                ],
                "values": [
                    0.0,
                    0.0,
                    3.0,
                    1.001,
                    3.0,
                    3.0,
                    1.002,
                    0,
                    0.0,
                    3.0,
                    1.0,
                    40.0,
                    60.0,
                    3.0,
                    3.0,
                    0.001,
                    0.0,
                    41.0,
                    0.0,
                    1.0,
                    2.001,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    3.0,
                    1.0,
                    3.0,
                    3.0,
                    40.0,
                    0.001,
                    1.0,
                    0.003,
                    0.003,
                    1.0,
                    0.0,
                    2.0,
                    2.001,
                    0.0,
                    0.0,
                    0,
                    0,
                    2.0,
                    2.001,
                    3.0,
                    3.0,
                    2.001,
                    0.0,
                    0,
                    2.001,
                    1.002,
                    3.0,
                    0.0,
                    0.0,
                    2.001,
                    0.0,
                    0.0,
                    1.002,
                    1.002,
                    1.002,
                    0.001,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 - 1 = 2 (quedan: 2 12)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n4 * 12 = 48 (quedan: 1 48)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 + 12 = 15 (quedan: 2 15)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 - 2 = 1 (quedan: 1 12)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n12 - 2 = 10 (quedan: 2 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 1 3 12",
                "ys": [
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 - 1 = 2 (quedan: 2 12)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n4 * 12 = 48 (quedan: 1 48)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 + 12 = 15 (quedan: 2 15)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 - 2 = 1 (quedan: 1 12)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n12 - 2 = 10 (quedan: 2 10)\n"
                ],
                "new_ys": [
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 - 1 = 2 (quedan: 2 12)\n2 + 12 = 14 (quedan: 14)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 - 1 = 2 (quedan: 2 12)\n12 / 2 = 6 (quedan: 6)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 - 1 = 2 (quedan: 2 12)\n2 * 12 = 24 (quedan: 24)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 - 1 = 2 (quedan: 2 12)\n12 - 2 = 10 (quedan: 10)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n4 * 12 = 48 (quedan: 1 48)\n1 + 48 = 49 (quedan: 49)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n4 * 12 = 48 (quedan: 1 48)\n48 / 2 = 24 (quedan: 1 24)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n4 * 12 = 48 (quedan: 1 48)\n1 * 48 = 48 (quedan: 48)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n4 * 12 = 48 (quedan: 1 48)\n48 - 1 = 47 (quedan: 47)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n4 * 12 = 48 (quedan: 1 48)\n48 - 48 = 0 (quedan: 1)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n1 + 36 = 37 (quedan: 37)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 / 2 = 18 (quedan: 18)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 - 1 = 35 (quedan: 35)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n1 * 36 = 36 (quedan: 36)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 / 1 = 36 (quedan: 36)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 - 36 = 0 (fin del juego)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n1 + 36 = 37 (quedan: 37)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 / 2 = 18 (quedan: 1 18)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 - 1 = 35 (quedan: 35)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 * 2 = 72 (quedan: 1 72)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 - 36 = 0 (quedan: 1 0)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 / 36 = 1 (quedan: 1)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 - 18 = 18 (quedan: 1 18)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n1 * 36 = 36 (quedan: 36)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 + 12 = 15 (quedan: 2 15)\n2 + 15 = 17 (quedan: 17)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 + 12 = 15 (quedan: 2 15)\n15 / 2 = 7.5 (no es un n\u00famero entero, no hay m\u00e1s pasos posibles)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 - 2 = 1 (quedan: 1 12)\n1 + 12 = 13 (quedan: 13)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 - 2 = 1 (quedan: 1 12)\n12 / 2 = 6 (quedan: 6)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 - 2 = 1 (quedan: 1 12)\n12 - 1 = 11 (quedan: 11)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 - 2 = 1 (quedan: 1 12)\n1 * 12 = 12 (quedan: 12)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 - 2 = 1 (quedan: 1 12)\n12 - 12 = 0 (se llega al resultado final)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n12 - 2 = 10 (quedan: 2 10)\n2 + 10 = 12 (queda: 12)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n12 - 2 = 10 (quedan: 2 10)\n2 * 10 = 20 (queda: 20)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n12 - 2 = 10 (quedan: 2 10)\n10 / 2 = 5 (queda: 5)\n"
                ],
                "values": [
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    40.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.003,
                    0.0,
                    3.0,
                    0.0,
                    60.0,
                    0.0,
                    0.0,
                    3.0,
                    0.0,
                    0.0,
                    0.003,
                    0,
                    0.0,
                    0.0,
                    0,
                    0.003,
                    0.003,
                    0.003,
                    0.003
                ],
                "select_new_ys": [
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 * 2 = 72 (quedan: 1 72)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n4 * 12 = 48 (quedan: 1 48)\n48 / 2 = 24 (quedan: 1 24)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 / 2 = 18 (quedan: 1 18)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 - 18 = 18 (quedan: 1 18)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 - 36 = 0 (fin del juego)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 + 12 = 15 (quedan: 2 15)\n15 / 2 = 7.5 (no es un n\u00famero entero, no hay m\u00e1s pasos posibles)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 - 2 = 1 (quedan: 1 12)\n12 - 12 = 0 (se llega al resultado final)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 1 3 12",
                "ys": [
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 * 2 = 72 (quedan: 1 72)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n4 * 12 = 48 (quedan: 1 48)\n48 / 2 = 24 (quedan: 1 24)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 / 2 = 18 (quedan: 1 18)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 - 18 = 18 (quedan: 1 18)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 - 36 = 0 (fin del juego)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 + 12 = 15 (quedan: 2 15)\n15 / 2 = 7.5 (no es un n\u00famero entero, no hay m\u00e1s pasos posibles)\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 - 2 = 1 (quedan: 1 12)\n12 - 12 = 0 (se llega al resultado final)\n"
                ],
                "new_ys": [
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 * 2 = 72 (quedan: 1 72)\n1 + 72 = 73 (quedan: 73)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 * 2 = 72 (quedan: 1 72)\n72 / 2 = 36 (quedan: 36)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 * 2 = 72 (quedan: 1 72)\n72 - 1 = 71 (quedan: 71)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 * 2 = 72 (quedan: 1 72)\n1 * 72 = 72 (quedan: 72)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 * 2 = 72 (quedan: 1 72)\n72 - 72 = 0 (quedan: 0)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n4 * 12 = 48 (quedan: 1 48)\n48 / 2 = 24 (quedan: 1 24)\n1 + 24 = 25 (quedan: 25)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n4 * 12 = 48 (quedan: 1 48)\n48 / 2 = 24 (quedan: 1 24)\n24 / 2 = 12 (quedan: 1 12)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n4 * 12 = 48 (quedan: 1 48)\n48 / 2 = 24 (quedan: 1 24)\n24 - 1 = 23 (quedan: 23)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n4 * 12 = 48 (quedan: 1 48)\n48 / 2 = 24 (quedan: 1 24)\n24 * 1 = 24 (quedan: 24)\n",
                    "3 + 1 = 4 (quedan: 1 4 12)\n4 * 12 = 48 (quedan: 1 48)\n48 / 2 = 24 (quedan: 1 24)\n24 - 24 = 0 (quedan: 0)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 / 2 = 18 (quedan: 1 18)\n1 + 18 = 19 (quedan: 19)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 / 2 = 18 (quedan: 1 18)\n18 / 2 = 9 (quedan: 1 9)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 / 2 = 18 (quedan: 1 18)\n18 - 1 = 17 (quedan: 17)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 / 2 = 18 (quedan: 1 18)\n1 * 18 = 18 (quedan: 18)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 / 2 = 18 (quedan: 1 18)\n18 - 18 = 0 (quedan: 0)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 - 18 = 18 (quedan: 1 18)\n1 + 18 = 19 (quedan: 19)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 - 18 = 18 (quedan: 1 18)\n18 / 2 = 9 (quedan: 1 9)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 - 18 = 18 (quedan: 1 18)\n18 - 1 = 17 (quedan: 17)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 - 18 = 18 (quedan: 1 18)\n1 * 18 = 18 (quedan: 18)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 - 18 = 18 (quedan: 1 18)\n18 - 18 = 0 (quedan: 0)\n",
                    "1 * 1 = 1 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 - 36 = 0 (fin del juego)\nNo hay posibles pr\u00f3ximos pasos ya que el juego ha terminado con un resultado de cero.\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 + 12 = 15 (quedan: 2 15)\n15 / 2 = 7.5 (no es un n\u00famero entero, no hay m\u00e1s pasos posibles)\nNo aplica, la entrada no es un n\u00famero entero.\n",
                    "1 + 1 = 2 (quedan: 2 3 12)\n3 - 2 = 1 (quedan: 1 12)\n12 - 12 = 0 (se llega al resultado final)\nNo hay posibles pr\u00f3ximos pasos, ya se lleg\u00f3 al resultado final.\n"
                ],
                "values": [
                    0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    3.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    3.0,
                    0.0,
                    0,
                    0.0,
                    0,
                    3.0,
                    0.0,
                    0,
                    0.0,
                    0,
                    0,
                    0
                ],
                "select_new_ys": [
                    "3 + 1 = 4 (quedan: 1 4 12)\n4 * 12 = 48 (quedan: 1 48)\n48 / 2 = 24 (quedan: 1 24)\n24 / 2 = 12 (quedan: 1 12)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 / 2 = 18 (quedan: 1 18)\n18 / 2 = 9 (quedan: 1 9)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 - 18 = 18 (quedan: 1 18)\n18 / 2 = 9 (quedan: 1 9)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 * 2 = 72 (quedan: 1 72)\n1 + 72 = 73 (quedan: 73)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 * 2 = 72 (quedan: 1 72)\n72 / 2 = 36 (quedan: 36)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 * 2 = 72 (quedan: 1 72)\n72 - 1 = 71 (quedan: 71)\n",
                    "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 * 2 = 72 (quedan: 1 72)\n1 * 72 = 72 (quedan: 72)\n"
                ]
            }
        ],
        "idx": 14,
        "ys": [
            "3 + 1 = 4 (quedan: 1 4 12)\n4 * 12 = 48 (quedan: 1 48)\n48 / 2 = 24 (quedan: 1 24)\n24 / 2 = 12 (quedan: 1 12)\n",
            "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 / 2 = 18 (quedan: 1 18)\n18 / 2 = 9 (quedan: 1 9)\n",
            "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 - 18 = 18 (quedan: 1 18)\n18 / 2 = 9 (quedan: 1 9)\n",
            "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 * 2 = 72 (quedan: 1 72)\n1 + 72 = 73 (quedan: 73)\n",
            "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 * 2 = 72 (quedan: 1 72)\n72 / 2 = 36 (quedan: 36)\n",
            "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 * 2 = 72 (quedan: 1 72)\n72 - 1 = 71 (quedan: 71)\n",
            "3 * 1 = 3 (quedan: 1 3 12)\n3 * 12 = 36 (quedan: 1 36)\n36 * 2 = 72 (quedan: 1 72)\n1 * 72 = 72 (quedan: 72)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 31755,
            "prompt_tokens": 134113,
            "cost": 0.0331736
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 2 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 + 2 = 4 (quedan: 2 4 12)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n",
                    "2 / 2 = 1 (quedan: 1 2 12)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n",
                    "2 * 12 = 24 (quedan: 2 2 24)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n",
                    "12 / 2 = 6 (quedan: 2 2 6)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n"
                ],
                "values": [
                    2.0,
                    3.0,
                    60.0,
                    40.0,
                    0.003,
                    22.0,
                    60.0,
                    0
                ],
                "select_new_ys": [
                    "2 / 2 = 1 (quedan: 1 2 12)\n",
                    "12 / 2 = 6 (quedan: 2 2 6)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n",
                    "2 + 2 = 4 (quedan: 2 4 12)\n",
                    "2 * 12 = 24 (quedan: 2 2 24)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 2 12",
                "ys": [
                    "2 / 2 = 1 (quedan: 1 2 12)\n",
                    "12 / 2 = 6 (quedan: 2 2 6)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n",
                    "2 + 2 = 4 (quedan: 2 4 12)\n",
                    "2 * 12 = 24 (quedan: 2 2 24)\n"
                ],
                "new_ys": [
                    "2 / 2 = 1 (quedan: 1 2 12)\n1 + 2 = 3 (quedan: 3 12)\n",
                    "2 / 2 = 1 (quedan: 1 2 12)\n2 * 12 = 24 (quedan: 1 24)\n",
                    "2 / 2 = 1 (quedan: 1 2 12)\n12 / 2 = 6 (quedan: 1 6)\n",
                    "2 / 2 = 1 (quedan: 1 2 12)\n2 + 12 = 14 (quedan: 1 14)\n",
                    "2 / 2 = 1 (quedan: 1 2 12)\n1 * 2 = 2 (quedan: 2 12)\n",
                    "2 / 2 = 1 (quedan: 1 2 12)\n12 - 2 = 10 (quedan: 1 10)\n",
                    "2 / 2 = 1 (quedan: 1 2 12)\n12 / 1 = 12 (quedan: 2 12)\n",
                    "2 / 2 = 1 (quedan: 1 2 12)\n12 - 1 = 11 (quedan: 1 11)\n",
                    "12 / 2 = 6 (quedan: 2 2 6)\n2 + 2 = 4 (quedan: 4 6)\n",
                    "12 / 2 = 6 (quedan: 2 2 6)\n2 * 2 = 4 (quedan: 4 6)\n",
                    "12 / 2 = 6 (quedan: 2 2 6)\n6 - 2 = 4 (quedan: 2 4)\n",
                    "12 / 2 = 6 (quedan: 2 2 6)\n6 / 2 = 3 (quedan: 2 3)\n",
                    "12 / 2 = 6 (quedan: 2 2 6)\n2 + 6 = 8 (quedan: 2 8)\n",
                    "12 / 2 = 6 (quedan: 2 2 6)\n2 * 6 = 12 (quedan: 2 12)\n",
                    "12 / 2 = 6 (quedan: 2 2 6)\n6 - 2 = 4 (quedan: 2 4)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n2 + 2 = 4 (quedan: 4 14)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n2 * 2 = 4 (quedan: 4 14)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n2 + 14 = 16 (quedan: 2 16)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n2 * 14 = 28 (quedan: 2 28)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n2 - 2 = 0 (quedan: 0 14)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n14 - 2 = 12 (quedan: 2 12)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n14 / 2 = 7 (quedan: 2 7)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n14 - 14 = 0 (quedan: 2 0)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n2 + 2 = 4 (quedan: 4 10)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n2 * 2 = 4 (quedan: 4 10)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n2 * 10 = 20 (quedan: 2 20)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 - 2 = 8 (quedan: 2 8)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n2 / 2 = 1 (quedan: 1 10)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n2 + 10 = 12 (quedan: 2 12)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n2 * 10 = 20 (quedan: 2 20)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 + 2 = 6 (quedan: 6 12)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n12 + 4 = 16 (quedan: 2 16)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 * 2 = 8 (quedan: 8 12)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 - 2 = 2 (quedan: 2 12)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n12 - 4 = 8 (quedan: 2 8)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n12 / 2 = 6 (quedan: 4 6)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n12 - 2 = 10 (quedan: 2 10)\n",
                    "2 + 2 = 4 (quedan: 2 4 12)\n2 + 4 = 6 (quedan: 6 12)\n",
                    "2 + 2 = 4 (quedan: 2 4 12)\n2 * 4 = 8 (quedan: 8 12)\n",
                    "2 + 2 = 4 (quedan: 2 4 12)\n4 / 2 = 2 (quedan: 2 12)\n",
                    "2 + 2 = 4 (quedan: 2 4 12)\n4 + 12 = 16 (quedan: 2 16)\n",
                    "2 + 2 = 4 (quedan: 2 4 12)\n4 - 2 = 2 (quedan: 2 12)\n",
                    "2 + 2 = 4 (quedan: 2 4 12)\n12 - 2 = 10 (quedan: 2 10)\n",
                    "2 + 2 = 4 (quedan: 2 4 12)\n12 / 2 = 6 (quedan: 2 6)\n",
                    "2 + 2 = 4 (quedan: 2 4 12)\n12 - 4 = 8 (quedan: 2 8)\n",
                    "2 * 12 = 24 (quedan: 2 2 24)\n2 + 2 = 4 (quedan: 4 24)\n",
                    "2 * 12 = 24 (quedan: 2 2 24)\n2 * 2 = 4 (quedan: 4 24)\n",
                    "2 * 12 = 24 (quedan: 2 2 24)\n2 * 24 = 48 (quedan: 2 48)\n",
                    "2 * 12 = 24 (quedan: 2 2 24)\n24 / 2 = 12 (quedan: 2 12)\n",
                    "2 * 12 = 24 (quedan: 2 2 24)\n24 - 2 = 22 (quedan: 2 22)\n",
                    "2 * 12 = 24 (quedan: 2 2 24)\n24 /  24 = 1 (quedan: 2 2 1)\n",
                    "2 * 12 = 24 (quedan: 2 2 24)\n24 - 24 = 0 (Termin\u00f3 el juego)\n"
                ],
                "values": [
                    1.0,
                    40.0,
                    1.002,
                    3.0,
                    60.0,
                    3.0,
                    60.0,
                    1.001,
                    0.0,
                    0.0,
                    1.002,
                    1.001,
                    3.0,
                    60.0,
                    0,
                    0.0,
                    0.0,
                    2.001,
                    3.0,
                    0.0,
                    60.0,
                    2.0,
                    0.0,
                    0.0,
                    0.0,
                    60.0,
                    3.0,
                    3.0,
                    3.0,
                    60.0,
                    0,
                    0.0,
                    60.0,
                    2.001,
                    0.0,
                    60.0,
                    3.0,
                    0.0,
                    3.0,
                    0.0,
                    0.0,
                    60.0,
                    2.001,
                    60.0,
                    3.0,
                    1.002,
                    3.0,
                    0.0,
                    0.0,
                    22.0,
                    60.0,
                    41.0,
                    0.003,
                    40.001
                ],
                "select_new_ys": [
                    "2 / 2 = 1 (quedan: 1 2 12)\n1 * 2 = 2 (quedan: 2 12)\n",
                    "2 / 2 = 1 (quedan: 1 2 12)\n12 / 1 = 12 (quedan: 2 12)\n",
                    "12 / 2 = 6 (quedan: 2 2 6)\n2 * 6 = 12 (quedan: 2 12)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n14 - 2 = 12 (quedan: 2 12)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n2 + 10 = 12 (quedan: 2 12)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 2 12",
                "ys": [
                    "2 / 2 = 1 (quedan: 1 2 12)\n1 * 2 = 2 (quedan: 2 12)\n",
                    "2 / 2 = 1 (quedan: 1 2 12)\n12 / 1 = 12 (quedan: 2 12)\n",
                    "12 / 2 = 6 (quedan: 2 2 6)\n2 * 6 = 12 (quedan: 2 12)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n14 - 2 = 12 (quedan: 2 12)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n2 + 10 = 12 (quedan: 2 12)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n"
                ],
                "new_ys": [
                    "2 / 2 = 1 (quedan: 1 2 12)\n1 * 2 = 2 (quedan: 2 12)\n2 + 12 = 14 (quedan: 14)\n",
                    "2 / 2 = 1 (quedan: 1 2 12)\n1 * 2 = 2 (quedan: 2 12)\n12 / 2 = 6 (quedan: 6)\n",
                    "2 / 2 = 1 (quedan: 1 2 12)\n1 * 2 = 2 (quedan: 2 12)\n2 * 12 = 24 (quedan: 24)\n",
                    "2 / 2 = 1 (quedan: 1 2 12)\n1 * 2 = 2 (quedan: 2 12)\n12 - 2 = 10 (quedan: 10)\n",
                    "2 / 2 = 1 (quedan: 1 2 12)\n1 * 2 = 2 (quedan: 2 12)\nNo hay m\u00e1s posibles pasos.\n",
                    "2 / 2 = 1 (quedan: 1 2 12)\n12 / 1 = 12 (quedan: 2 12)\n2 + 12 = 14 (quedan: 14)\n",
                    "2 / 2 = 1 (quedan: 1 2 12)\n12 / 1 = 12 (quedan: 2 12)\n12 / 2 = 6 (quedan: 6)\n",
                    "2 / 2 = 1 (quedan: 1 2 12)\n12 / 1 = 12 (quedan: 2 12)\n2 * 12 = 24 (quedan: 24)\n",
                    "2 / 2 = 1 (quedan: 1 2 12)\n12 / 1 = 12 (quedan: 2 12)\n12 - 2 = 10 (quedan: 10)\n",
                    "12 / 2 = 6 (quedan: 2 2 6)\n2 * 6 = 12 (quedan: 2 12)\n2 + 12 = 14 (queda: 14)\n",
                    "12 / 2 = 6 (quedan: 2 2 6)\n2 * 6 = 12 (quedan: 2 12)\n12 / 2 = 6 (queda: 6)\n",
                    "12 / 2 = 6 (quedan: 2 2 6)\n2 * 6 = 12 (quedan: 2 12)\n2 * 12 = 24 (queda: 24)\n",
                    "12 / 2 = 6 (quedan: 2 2 6)\n2 * 6 = 12 (quedan: 2 12)\n12 - 2 = 10 (queda: 10)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n14 - 2 = 12 (quedan: 2 12)\n2 + 12 = 14 (quedan: 14)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n14 - 2 = 12 (quedan: 2 12)\n12 / 2 = 6 (quedan: 6)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n14 - 2 = 12 (quedan: 2 12)\n12 - 2 = 10 (quedan: 10)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n14 - 2 = 12 (quedan: 2 12)\n2 * 12 = 24 (quedan: 24)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n14 - 2 = 12 (quedan: 2 12)\n2 - 12 = -10 (quedan: -10)\n",
                    "12 + 2 = 14 (quedan: 2 2 14)\n14 - 2 = 12 (quedan: 2 12)\nNo hay m\u00e1s posibles pasos, ya que no se pueden realizar operaciones con n\u00fameros negativos en este contexto.\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n2 + 12 = 14 (quedan: 14)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n12 / 2 = 6 (quedan: 2 6)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n2 * 12 = 24 (quedan: 24)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n12 - 2 = 10 (quedan: 10)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\nEntrada: 5 10 15\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\nPosibles pr\u00f3ximos pasos:\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n5 + 10 = 15 (quedan: 15)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n5 * 10 = 50 (quedan: 50 15)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n10 + 15 = 25 (quedan: 5 25)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 15)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n15 / 5 = 3 (quedan: 5 3)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n5 - 10 = -5 (quedan: -5 15)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n15 - 10 = 5 (quedan: 5 5)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n10 * 15 = 150 (quedan: 150)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n2 + 10 = 12 (quedan: 2 12)\n2 + 12 = 14 (quedan: 14)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n2 + 10 = 12 (quedan: 2 12)\n12 / 2 = 6 (quedan: 6)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n2 + 10 = 12 (quedan: 2 12)\n12 - 2 = 10 (quedan: 10)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n2 + 10 = 12 (quedan: 2 12)\n2 * 12 = 24 (quedan: 24)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n2 + 10 = 12 (quedan: 2 12)\n2 - 12 = -10 (quedan: -10)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n2 + 12 = 14 (quedan: 14)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n12 / 2 = 6 (quedan: 6)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n2 * 12 = 24 (quedan: 24)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n12 - 2 = 10 (quedan: 10)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\nEntrada: 5 10 20\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\nPosibles pr\u00f3ximos pasos:\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n5 + 10 = 15 (quedan: 15 20)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n20 + 5 = 25 (quedan: 10 25)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n5 * 10 = 50 (quedan: 50 20)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 - 5 = 5 (quedan: 5 20)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n20 - 10 = 10 (quedan: 5 10)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n20 / 5 = 4 (quedan: 4 10)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n20 - 5 = 15 (quedan: 15 10)\n"
                ],
                "values": [
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.003,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.003,
                    0.003,
                    60.0,
                    0.003,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.003,
                    0,
                    1.002,
                    0.0,
                    0.0,
                    0.003,
                    0.003,
                    0.0,
                    1.0,
                    0.0,
                    3.0,
                    0.0,
                    0.001,
                    2.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.003,
                    0.003,
                    0.0,
                    3.0,
                    0.0,
                    0.002,
                    0.0,
                    1.0,
                    0.0,
                    0.0
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (quedan: 2 2 6)\n2 * 6 = 12 (quedan: 2 12)\n2 * 12 = 24 (queda: 24)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 15)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n15 - 10 = 5 (quedan: 5 5)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n12 / 2 = 6 (quedan: 2 6)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n5 * 10 = 50 (quedan: 50 15)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n20 - 10 = 10 (quedan: 5 10)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 2 12",
                "ys": [
                    "12 / 2 = 6 (quedan: 2 2 6)\n2 * 6 = 12 (quedan: 2 12)\n2 * 12 = 24 (queda: 24)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 15)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n15 - 10 = 5 (quedan: 5 5)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n12 / 2 = 6 (quedan: 2 6)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n5 * 10 = 50 (quedan: 50 15)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n20 - 10 = 10 (quedan: 5 10)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (quedan: 2 2 6)\n2 * 6 = 12 (quedan: 2 12)\n2 * 12 = 24 (queda: 24)\nNo hay pr\u00f3ximos pasos ya que solo queda un n\u00famero en la entrada.\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 15)\n2 + 15 = 17 (quedan: 17)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 15)\n15 / 2 = 7.5 (no es posible realizar esta operaci\u00f3n con enteros)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 15)\n2 * 15 = 30 (quedan: 30)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 15)\n15 - 2 = 13 (quedan: 13)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 15)\nNo hay m\u00e1s posibles pasos ya que solo hay dos n\u00fameros en la entrada.\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\n2 + 20 = 22 (quedan: 22)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\n20 / 2 = 10 (quedan: 10)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\n20 - 2 = 18 (quedan: 18)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\n2 * 20 = 40 (quedan: 40)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\nEntrada: 5 7 9\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\nPosibles pr\u00f3ximos pasos:\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\n5 + 7 = 12 (quedan: 12 9)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\n7 + 9 = 16 (quedan: 5 16)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\n9 - 5 = 4 (quedan: 4 7 9)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\n5 * 7 = 35 (quedan: 35 9)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\n7 / 5 = 1.4 (no es una opci\u00f3n v\u00e1lida)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\n9 - 7 = 2 (quedan: 5 2)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\n9 / 5 = 1.8 (no es una opci\u00f3n v\u00e1lida)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\n5 - 7 = -2 (no es una opci\u00f3n v\u00e1lida)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n15 - 10 = 5 (quedan: 5 5)\n5 + 5 = 10 (quedan: 10)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n15 - 10 = 5 (quedan: 5 5)\n5 / 5 = 1 (quedan: 1)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n15 - 10 = 5 (quedan: 5 5)\n5 * 5 = 25 (quedan: 25)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n15 - 10 = 5 (quedan: 5 5)\n5 - 5 = 0 (quedan: 0)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n12 / 2 = 6 (quedan: 2 6)\n2 + 6 = 8 (quedan: 8)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n12 / 2 = 6 (quedan: 2 6)\n6 / 2 = 3 (quedan: 3)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n12 / 2 = 6 (quedan: 2 6)\n2 * 6 = 12 (quedan: 12)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n12 / 2 = 6 (quedan: 2 6)\n6 - 2 = 4 (quedan: 4)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n5 * 10 = 50 (quedan: 50 15)\n50 - 15 = 35 (quedan: 35)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n5 * 10 = 50 (quedan: 50 15)\n50 / 15 = 3.33 (quedan: 3.33)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n5 * 10 = 50 (quedan: 50 15)\n50 * 15 = 750 (quedan: 750)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n5 * 10 = 50 (quedan: 50 15)\n50 % 15 = 5 (quedan: 5)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n20 - 10 = 10 (quedan: 5 10)\n5 + 10 = 15 (quedan: 15)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n20 - 10 = 10 (quedan: 5 10)\n5 * 10 = 50 (quedan: 50)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n20 - 10 = 10 (quedan: 5 10)\n10 / 5 = 2 (quedan: 2)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n20 - 10 = 10 (quedan: 5 10)\n10 - 5 = 5 (quedan: 5)\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n20 - 10 = 10 (quedan: 5 10)\nNo hay m\u00e1s posibles pasos.\n"
                ],
                "values": [
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0,
                    0,
                    0,
                    0.003,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0,
                    0,
                    0.0,
                    0.0,
                    0,
                    0.0,
                    0.0,
                    0.003
                ],
                "select_new_ys": [
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\nPosibles pr\u00f3ximos pasos:\n",
                    "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n20 - 10 = 10 (quedan: 5 10)\nNo hay m\u00e1s posibles pasos.\n",
                    "12 / 2 = 6 (quedan: 2 2 6)\n2 * 6 = 12 (quedan: 2 12)\n2 * 12 = 24 (queda: 24)\nNo hay pr\u00f3ximos pasos ya que solo queda un n\u00famero en la entrada.\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 15)\n2 + 15 = 17 (quedan: 17)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 15)\n15 / 2 = 7.5 (no es posible realizar esta operaci\u00f3n con enteros)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 15)\n2 * 15 = 30 (quedan: 30)\n",
                    "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 15)\n15 - 2 = 13 (quedan: 13)\n"
                ]
            }
        ],
        "idx": 15,
        "ys": [
            "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 20)\nPosibles pr\u00f3ximos pasos:\n",
            "2 * 2 = 4 (quedan: 4 2 12)\n4 / 2 = 2 (quedan: 2 12)\n20 - 10 = 10 (quedan: 5 10)\nNo hay m\u00e1s posibles pasos.\n",
            "12 / 2 = 6 (quedan: 2 2 6)\n2 * 6 = 12 (quedan: 2 12)\n2 * 12 = 24 (queda: 24)\nNo hay pr\u00f3ximos pasos ya que solo queda un n\u00famero en la entrada.\n",
            "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 15)\n2 + 15 = 17 (quedan: 17)\n",
            "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 15)\n15 / 2 = 7.5 (no es posible realizar esta operaci\u00f3n con enteros)\n",
            "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 15)\n2 * 15 = 30 (quedan: 30)\n",
            "12 - 2 = 10 (quedan: 2 2 10)\n10 + 2 = 12 (quedan: 2 12)\n10 / 5 = 2 (quedan: 2 15)\n15 - 2 = 13 (quedan: 13)\n"
        ],
        "infos": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 37098,
            "prompt_tokens": 157697,
            "cost": 0.038959
        }
    }
]